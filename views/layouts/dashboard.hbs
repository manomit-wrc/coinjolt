<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Coinjolt | Dashboard</title>
    <!-- Favicon-->
    <link rel="shortcut icon" href="/dist/img/favicon.ico" type="image/x-icon">
    <link rel="icon" href="/dist/img/favicon.ico" type="image/x-icon">
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Icons Style -->
    <link rel="stylesheet" href="/dist/css/icon.css">
    <!-- Style -->
    <link rel="stylesheet" href="/dist/css/style.css">
    <!-- Bootstrap 3.3.7 -->
    <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="/bower_components/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="/bower_components/Ionicons/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="/dist/css/AdminLTE.min.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
    folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="/dist/css/skins/_all-skins.min.css">
    <!-- Morris chart -->
    <link rel="stylesheet" href="/bower_components/morris.js/morris.css">
    <!-- jvectormap -->
    <link rel="stylesheet" href="/bower_components/jvectormap/jquery-jvectormap.css">
    <!-- Date Picker -->
    <link rel="stylesheet" href="/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <!-- Daterange picker -->
    <link rel="stylesheet" href="/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <!-- bootstrap wysihtml5 - text editor -->
    <link rel="stylesheet" href="/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">
    <!-- Sweet alert -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css">

    <!-- Style -->
    <link rel="stylesheet" href="/dist/css/custom.css">
    <!-- Responsive Style -->
    <link rel="stylesheet" href="/dist/css/responsive.css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <!-- Google Font -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <!-- live chart styleshhet -->
    <link type="text/css" rel="stylesheet" href="https://pubnub.github.io/eon/v/eon/1.0.0/eon.css" crossorigin="anonymous"/>

     <!-- live chart scripts -->
    <script src="https://cdn.pubnub.com/sdk/javascript/pubnub.4.18.0.min.js" crossorigin="anonymous"></script> 
    <script type="text/javascript" src="https://pubnub.github.io/eon/v/eon/1.0.0/eon.js" crossorigin="anonymous"></script>

</head>

<body class="hold-transition skin-blue sidebar-mini">
    <div class="wrapper">
        <!-- begin #header -->
        {{> header}}
        <!-- end #header -->

        <!-- begin #sidebar -->
        {{> sidebar}}
        <!-- end #sidebar -->

        <div class="content-wrapper">
            <!-- begin #content -->
            {{{body}}}
            <!-- end #content -->
        </div>

        {{> footer}}

        <div class="control-sidebar-bg"></div>
        <!-- Referral modal starts -->
        <div class="modal fade in" id="referralModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="padding-right: 15px;">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">Ã—</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel">Referral Link</h4>
                    </div>
                    <div class="modal-body">
                        <p>
                            Your link has been successfully copied to clipboard! Earn 2% for every deposit made by your friends for life. Here is your referral link for reference:
                            <a href="" style="color: #4165b4;" target="_blank">https://coinjolt.com?user={{reffer_link_id}}</a>
                        </p>
                        <p>For more information about our referral program,
                            <a style="color: #4165b4;" href="invite-friends">click here.</a>
                        </p>
                        <div class="row">
                            <div class="col-md-4">
                                <button type="button" class="btn btn-default change-referral-name" id="changereferralBtn">Change Referral ID</button>
                            </div>
                        </div>
                        <div class="row" id="changeReferralFrm" style="display:none;">
                            <div class="change-rf">
                                <p class="referralname_err" style="color: red; background-color: rgb(242, 222, 222); border-color: rgb(235, 204, 209); padding: 9px; font-size: 15px; margin-bottom: 16px;display:none;"></p>
                                <form method="post" class="change-rf-form" action="/save-referral-name" name="referralNameFrm">
                                    <div class="col-md-5">
                                        <div class="refer-id">
                                            https://coinjolt.com?user=
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <input type="text" name="referral_name" class="form-control" id="referral_name" value="{{reffer_link_id}}" placeholder="ie://username"
                                        required="required">
                                    </div>
                                    <div class="col-md-3">
                                        <input type="submit" id="referral_name_save" name="referral_name_save" style="color: #333 !important;"value="Save" class="form-control btn btn-default">
                                    </div>
                                    <input type="text" name="referral_link_text" id="referral_link_text" value="" style="display:none;">
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
            <!-- Referral modal ends -->
        </div>
    </div>
    <!-- ./wrapper -->

    <!-- jQuery 3 -->
    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="/bower_components/jquery-ui/jquery-ui.min.js"></script>
    <script src="/dist/js/jquery.validate.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/additional-methods.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>
        $.widget.bridge('uibutton', $.ui.button);
    </script>
    <!-- Bootstrap 3.3.7 -->
    <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- Morris.js charts -->
    <script src="/bower_components/raphael/raphael.min.js"></script>
    <script src="/bower_components/morris.js/morris.min.js"></script>
    <!-- Sparkline -->
    <script src="/bower_components/jquery-sparkline/dist/jquery.sparkline.min.js"></script>
    <!-- jvectormap -->
    <script src="/plugins/jvectormap/jquery-jvectormap-1.2.2.min.js"></script>
    <script src="/plugins/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="/bower_components/jquery-knob/dist/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="/bower_components/moment/min/moment.min.js"></script>
    <script src="/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
    <!-- datepicker -->
    <script src="/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <!-- Bootstrap WYSIHTML5 -->
    <script src="/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.all.min.js"></script>
    <!-- Slimscroll -->
    <script src="/bower_components/jquery-slimscroll/jquery.slimscroll.min.js"></script>
    <!-- FastClick -->
    <script src="/bower_components/fastclick/lib/fastclick.js"></script>
    <!-- AdminLTE App -->
    <script src="/dist/js/adminlte.min.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="/dist/js/pages/dashboard.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="/dist/js/demo.js"></script>
    <!-- DataTables -->
    <script src="/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <!-- jquery masked input -->
    <script src="/dist/js/jquery.maskedinput.js"></script>
    <!-- jquery sweet alert -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
    <!-- Chart.js -->
    <script src="/bower_components/chart.js/Chart.js"></script>

    <!-- CK Editor -->
    <script src="https://cdn.ckeditor.com/4.9.2/standard/ckeditor.js"></script>

    <!--for deposite funds,pending_wire_transfer//-->
    <script src="/js/deposite_funds.js"></script>
    <script src="/js/pending_wire_transfer.js"></script>
    <script src="/js/request_withdrawal.js"></script>
    <script src="/js/kyc.js"></script>
    <script src="/js/admin_email.js"></script>
    <script src="/js/custom.js"></script>

    <script src="https://code.highcharts.com/stock/highstock.js"></script>
    <script src="https://code.highcharts.com/stock/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/stock/modules/export-data.js"></script>

    <!--end-->

   

    {{!-- //for socket io --}}
     <script src="/socket/socket.io.js"></script>
     
    <script type="text/javascript">
        var seriesOptions = [],
        seriesCounter = 0,
        names = ['Investments', 'Withdrawals'];
        function createChart() {
            Highcharts.stockChart('divChart', {
                credits: {
                    enabled: false
                },
                exporting: { enabled: false },
                yAxis: {
                    opposite: false,
                    labels: {
                        formatter: function () {
                            return (this.value > 0 ? ' + ' : '') + this.value;
                        }
                    },
                    plotLines: [{
                        value: 0,
                        width: 2,
                        color: 'silver'
                    }]
                },
                plotOptions: {
                    series: {
                        compare: 'value',
                        showInNavigator: true
                    }
                },
                tooltip: {
                    pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b><br/>',
                    valueDecimals: 2,
                    split: true
                },
                series: seriesOptions
            });
        }

        $(document).ready(function() {
            $.each(names, function (i, name) {
                $.getJSON('/create-chart-data/'+name, function (data) {
                    seriesOptions[i] = {
                        name: name,
                        data: data
                    };
                    seriesCounter += 1;
                    if (seriesCounter === names.length) {
                        createChart();
                    }
                });
            });
        });
    </script>
    <script type="text/javascript">

        //support request save with ajax
            
        $('#support_saubmit_from_user').on('click', function () {
            var subject = $('#subject').val();
            var details = $('#description').val();

            if(subject != '' && details != ''){
                $.ajax({
                    type: "POST",
                    url: '/submit-a-request',
                    data:{
                        subject: subject,
                        description: details
                    },
                    success: function (response){
                        if(response.success == true){
                            //start socket
                            var socket = io.connect('http://localhost:8088');
                            socket.emit('pushNotification', $('#description').val());
                            $('#description').val();
                            socket.on('pushNotification', function(msg){
                              /*$('#messages').append($('<li>').text(msg));
                              window.scrollTo(0, document.body.scrollHeight);*/
                              
                              pushNotification.notify(msg);
                            });
                            //end

                            swal({
                                title: 'ThankYou',
                                text: 'Request submit successfully.',
                                type: "success",
                                confirmButtonColor: "#DD6B55",
                                confirmButtonText: "OK"
                            },  function() {
                                window.location.reload();
                            });
                        }
                    }
                });
            }
        });

        (function() {
            Notification.requestPermission();
            function notify(options) {
                var title = options.title || "Notification";
                if (!("Notification" in window)) {
                    alert("This browser does not support desktop notification");
                } else if (Notification.permission === "granted") {
                    new Notification(title ,options);
                } else if (Notification.permission !== 'denied') {
                    Notification.requestPermission(function (permission) {
                        if (permission === "granted") {
                            new Notification("title" ,{body: body});
                        }
                });
              }
            }
            window.pushNotification = {
                notify: notify
            }
        })(); 
        //end

        $(function () {
            'use strict';
                // SLIMSCROLL FOR CHAT WIDGET
                var heightSidebar = $(".sidebar").height();
                console.log("heightSidebar:" +heightSidebar);
                $('.sidebar').slimScroll({
                    height: heightSidebar
                });
            });

        $(function () {
            $('#example2').DataTable({
                'paging': true,
                'lengthChange': false,
                'searching': false,
                'ordering': true,
                'info': true,
                'autoWidth': false
            });
            $('#support-list').DataTable();
            $('#my_referrals').DataTable();
            $('#example3').DataTable();
            $('#example4').DataTable();
            $('#example5').DataTable();
            $('#example6').DataTable();
            $('#example7').DataTable();
            $('#wallet_transaction').DataTable();
        });

        $(document).ready(function () {
            $('#currentratetext').removeClass('alert alert-danger');
            $('#calculatedamount').removeClass('alert alert-success');
            $('#sell_currentratetext').removeClass('alert alert-danger');
            $('#sell_calculatedamount').removeClass('alert alert-success');
            $('.expected').removeClass('alert alert-danger');

            $('#profileSaveMsg').delay(2000).fadeOut();

            $("#changereferralBtn").click(function(){
                $("#changeReferralFrm").slideToggle('slow');
            });

            // jquery masked input for entering credit card numbers
            $('#cardnumber').mask("9999 9999 9999 9999", {placeholder: "."});

            // Account settings validationselectedRadioValue
            $("#update_profile").validate({
                rules: {
                    user_name: {
                        required: true
                    },
                    first_name: {
                        required: true
                    },
                    last_name: {
                        required: true
                    },
                    address: {
                        required: true
                    },
                    contact_no: {
                        required: true,
                        number: true,
                        maxlength: 10,
                        minlength: 10
                    },
                    dob: {
                        required: true
                    },
                    city: {
                        required: true
                    },
                    state: {
                        required: true
                    },
                    country: {
                        required: true
                    },
                    postcode: {
                        required: true
                    },
                    async_upload: {
                        extension: 'jpg|JPG|jpeg|JPEG|png|PNG|tiff|TIFF'
                    },
                    business_name: {
                        required: true
                    },
                    business_number: {
                        required: true,
                        number: true,
                    },
                    business_registration_country: {
                        required: true
                    },
                    street: {
                        required: true
                    },
                    city_ins: {
                        required: true
                    },
                    state_ins: {
                        required: true
                    },
                    phone_number: {
                        required: true
                    },
                    postal_code: {
                        required: true,
                        number: true
                    },
                    email_address: {
                        required: true,
                        email: true
                    }
                },
                messages: {
                    user_name: {
                        required: "Please enter your nick name"
                    },
                    first_name: {
                        required: "PLease enter your first name"
                    },
                    last_name: {
                        required: "Please enter your last name"
                    },
                    address: {
                        required: "Please enter street address"
                    },
                    contact_no: {
                        required: "Please enter contact no",
                        number: "It must be number",
                        maxlength: "Must be 10 digits",
                        minlength: "Must be 10 digits"
                    },
                    dob: {
                        required: "Please enter date of birth"
                    },
                    city: {
                        required: "Please enter city"
                    },
                    state: {
                        required: "Please enter state"
                    },
                    country: {
                        required: "Please enter country"
                    },
                    postcode: {
                        required: "Please enter postal code"
                    },
                    async_upload: {
                        extension: 'Must be image type'
                    },
                      business_name: {
                        required: "Please enter registered business name"
                    },
                    business_number: {
                        required: "Please enter business number",
                        number: "It must be number",
                    },
                    business_registration_country: {
                        required: "Please enter business country"
                    },
                    street: {
                        required: "Please enter street"
                    },
                    city_ins: {
                        required: "Please enter city"
                    },
                    state_ins: {
                        required: "Please enter state"
                    },
                    phone_number: {
                        required: "Please enter phone number"
                    },
                    postal_code: {
                        required: "Please enter postal code",
                        number: "It must be number"
                    },
                    email_address: {
                        required: "Please enter email address",
                        email: "Please enter valid email address"
                    }
                }
            });

            // Script for Change password
            $("#changepassword").click(function(e) {
                $("#frmUpdatePassword").submit();
            });

            $("#frmUpdatePassword").validate({
                rules: {
                    oldpassword: {
                        required: true
                    },
                    newpassword: {
                        required: true
                    },
                    confirmpassword: {
                        required: true,
                        equalTo: "#newpassword"
                    }
                },
                messages: {
                    oldpassword: {
                        required: "Please enter old password"
                    },
                    newpassword: {
                        required: "Please enter new password"
                    },
                    confirmpassword: {
                        required: "Please enter confirm password",
                        equalTo: "new password and confirm password must be same"
                    }
                },
                submitHandler:function(form) {
                    $.ajax({
                        type: "POST",
                        url: "/update-password",
                        data: {
                            oldpassword: $("#oldpassword").val(),
                            newpassword: $("#newpassword").val()
                        },
                        beforeSend: function() {
                            $(".loader-gif").show();
                        },
                        success:function(response) {
                            $(".loader-gif").hide();
                            $(".errorPass").show();
                            if(response.success === true) {
                                $(".errorPass").removeClass('error').addClass('success');
                            }
                            else {
                                $(".errorPass").removeClass('success').addClass('error');
                            }
                            $(".errorPass").html(response.message);

                        },
                        error: function(xhr) {
                            $(".loader-gif").hide();
                        }
                    });
                }
            });

            $("#async_upload").change(function(e){
                var input = this;
                var exts = ['jpg','jpeg','png','tiff'];
                if (input.files && input.files[0]) {
                    var get_ext = input.files[0].name.split('.');
                    get_ext = get_ext.reverse();
                    if ( $.inArray ( get_ext[0].toLowerCase(), exts ) > -1 ) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $('.preview_image, .user-image, .img-circle').attr('src', e.target.result);
                        }
                        reader.readAsDataURL(input.files[0]);
                        var formData = new FormData();
                        formData.append('async_upload', input.files[0]);
                        $.ajax({
                            type: "POST",
                            url: "/update-profile-pic",
                            data:formData,
                            processData: false,
                            contentType: false,
                            beforeSend:function() {
                                $(".loaderimg").css('display', 'block');
                            },
                            success: function (response) {
                                if (response.success === true) {
                                    swal("", response.message, "success");
                                } else {
                                    swal("", "error", "warning");
                                }
                            },
                            error: function (xhr) {

                            }
                        });
                    } else {
                        swal("", 'Invalid file!', "warning");
                    }
                }
            });

            // Script for uploading id proof
            $("#frmIDChange").validate({
                rules: {
                    async_uploads: {
                        required: true,
                        extension: 'jpg|JPG|jpeg|JPEG|png|PNG|tiff|TIFF'
                    }
                },
                messages: {
                    async_uploads: {
                        required: "Please upload id proof",
                        extension: 'Must be image file'
                    }
                },
                submitHandler:function(form) {
                    var formData = new FormData($('#frmIDChange')[0]);
                    $.ajax({
                        type: 'POST',
                        url: '/update-id-proof',
                        data: formData,
                        processData: false,
                        contentType: false,
                        beforeSend:function() {
                            $("#loaderimg").show();
                        },
                        success: function ( response ) {
                            $("#loaderimg").hide();
                            $(".errorIDProof").show();
                            if(response.success === true) {
                                $(".errorIDProof").removeClass('error').addClass('success');
                                $("#id-proof-view").attr('href', '/id-proof/'+response.file_name);
                                window.location.href = "/account-settings";
                            }
                            else {
                                $(".errorIDProof").removeClass('success').addClass('error');
                            }
                            $(".errorIDProof").html(response.message);
                        }
                    });
                }
            });

            // Script for saving referral names
            $('#referral_name_save').on('click', function(e){
                e.preventDefault();
                var errors = '';
                var referral_name = $('#referral_name').val();
                if (referral_name == '') {
                    errors += "Referral name can not be left empty<br/>";
                }
                if (errors !='') {
                    $('.referralname_err').html(errors);
                    $('.referralname_err').show();
                } else {
                    $('.referralname_err').html('');
                    $('.referralname_err').hide();
                    $.ajax({
                        type: 'POST',
                        data: {referral_name: referral_name},
                        url: "/save-referral-name", 
                        dataType: "json",
                        beforeSend: function() {
                            $('#referral_name_save').prop('disabled', true);
                            $("#referral_name_save").attr('value', 'Please wait');
                        },
                        success: function(result) {
                            if (result.message !='' && result.status === 'true') {
                                $('#referral_name_save').prop('disabled', false);
                                swal({
                                    title: "Success",
                                    text: result.message,
                                    type: "success",
                                    showConfirmButton: true
                                },
                                function(isConfirm) {
                                    if (isConfirm) {
                                        window.location.href = "/dashboard";
                                    }
                                });
                                $('#referral_name_save').prop('disabled', false);
                                $("#referral_name_save").attr('value', 'Save');
                                $('#referralModal').modal('hide');
                            } else {
                                $('#referral_name_save').prop('disabled', false);
                                $("#referral_name_save").attr('value', 'Save');
                                $('.referralname_err').html(result.message);
                                $('.referralname_err').show();
                            }
                        },
                        error: function(error) {
                            console.log(error);
                        }
                    });
                }
            });

            // Script for showing current currency type purchase type selection
            $('#currency_purchased').on('change', function () {
                var currencyType =  $("#currency_purchased option:selected").text();
                var msg = "Current Rate("+currencyType+")"+": "+"$ ";
                var amtVal = parseFloat(jQuery("#payAmount").val());
                if (currencyType !== '') {
                    $('.expected').removeClass('alert alert-danger');
                    $('.expected').html('');
                    $('.expected').hide();
                    $.ajax({
                        type: 'GET',
                        url: "https://coincap.io/page/"+currencyType, 
                        dataType: "json",
                        success: function(result) {
                            $('#coinRate').val(result.price_usd);
                            var roundUpPrice = parseFloat(Math.round(result.price_usd * 100) / 100).toFixed(2);
                            $('.currentrateexpected').html(msg+roundUpPrice);
                            $('#currentratetext').addClass('alert alert-danger');
                            $('#currentratetext').show();
                            $('#currentratetext').html('Current Rate('+currencyType+')'+': $'+result.price_usd);
                            $('.currentrateexpected').show();
                        },
                        error: function(error) {
                            console.log(error);
                        }
                    });
                }
            });

            // Script for validating amount field in buy coins
            $('#payAmount').on('keyup', function(event) {
                $(this).val($(this).val().replace(/[^0-9\.]/g,''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
                    event.preventDefault();
                    $('.expected').addClass('alert alert-danger');
                    $('.expected').html('Please enter a valid number');
                    $('.expected').show();
                    $('#calculatedamount').html('');
                    $('#calculatedamount').hide();
                }
                var amtVal = parseFloat(jQuery("#payAmount").val());
                var coinRate = parseFloat(jQuery('#coinRate').val());
                var selectopton = jQuery("#currency_purchased").val();
                var currency_purchased = jQuery("#currency_purchased").val();
                var currencyType =  $("#currency_purchased option:selected").val();
                var currentUsdBal = {{user.currentUsdBalance}};
                var errmsg = "Amount exceeds current balance of " + currentUsdBal + " USD, <a href='/deposit-funds'>click here to deposit funds.</a>";
                if (parseFloat(amtVal) > parseFloat(currentUsdBal)) {
                    $('.expected').addClass('alert alert-danger');
                    $('.expected').html(errmsg);
                    $('.expected').show();
                    $('#calculatedamount').html('');  
                    $('#calculatedamount').css('display','none');
                    $("#cc-submit").prop('disabled', true);
                } else if (!jQuery.isNumeric(jQuery("#payAmount").val())) {
                    $('.expected').addClass('alert alert-danger');
                    $('.expected').html('Please enter a valid number.');
                    $('.expected').show();
                    $("#cc-submit").prop('disabled', true);
                } else if (amtVal < 1) {
                    $('.expected').addClass('alert alert-danger');
                    $('.expected').html('Amount should be atleast $1');
                    $('.expected').show();
                    $("#cc-submit").prop('disabled', true);
                } else {
                    if (currencyType === '') {
                        $('#calculatedamount').html('');
                        $('#calculatedamount').removeClass('alert alert-success');
                        $('#calculatedamount').hide();
                        var amtExpect = parseFloat(amtVal / coinRate);
                        if (isNaN(amtExpect)) {
                            $('#calculatedamount').html('');
                            $('#calculatedamount').removeClass('alert alert-success');
                            $('#calculatedamount').css('display','none');
                        }
                    } else {
                        var amtExpect = parseFloat(amtVal/coinRate);
                        $("#converted_amount").val(amtExpect);
                        $('#currentratetext').addClass('alert alert-danger');
                        $('#calculatedamount').addClass('alert alert-success');
                        jQuery('#calculatedamount').show();
                        jQuery('#calculatedamount').html('Calculated Amount('+currencyType+')'+': '+ parseFloat(amtVal/coinRate) );
                        jQuery("#cc-submit").prop('disabled', false);
                        $('.expected').removeClass('alert alert-danger');
                        $('.expected').html('');
                        $('.expected').hide();
                    }
                }
            });

            //Script for handling submission of buy request of coin
            $('#cc-submit').on('click', function(e) {
                e.preventDefault();
                var amount = $('#payAmount').val();
                var currencyBuyType = $('#currency_purchased').val();
                if (amount === '') {
                    $('.expected').addClass('alert alert-danger');
                    $('.expected').html('Please enter amount');
                    $('.expected').show();
                }
                if (currencyBuyType === '') {
                    $('.expected').addClass('alert alert-danger');
                    $('.expected').html('Please choose a currency to buy');
                    $('.expected').show();

                    $('#currentratetext').html('');
                    $('#currentratetext').removeClass('alert alert-danger');
                    $('#currentratetext').hide();

                    $('#calculatedamount').html('');
                    $('#calculatedamount').removeClass('alert alert-success');
                    $('#calculatedamount').hide();
                }
                if (amount !== '' && currencyBuyType !== '') {
                    var amtVal = jQuery("#payAmount").val();
                    var coinRate = jQuery("#coinRate").val();
                    var actualAmtExpect = parseFloat(amtVal/coinRate);
                    var currency_purchased = jQuery("#currency_purchased").val();
                    var user_id = {{user.id}};
                    var currency_name = jQuery( "#currency_purchased option:selected" ).text();
                    var currency_value = jQuery("#currency_purchased option:selected").val();
                    var totalAmtExpect = 0;
                    var currentUsdBalance = {{user.currentUsdBalance}};
                    currentUsdBalance = parseFloat(Math.round(currentUsdBalance * 100) / 100).toFixed(2);
                    var finalusdBalance = parseFloat(currentUsdBalance - amtVal);
                    $('.expected').removeClass('alert alert-danger');
                    $('.expected').html('');
                    $('.expected').hide();
                    $.ajax({
                        type: 'POST',
                        data: {amtVal: amtVal,coinRate: coinRate,currencyBuyType: currencyBuyType},
                        url: "/buy-coin", 
                        dataType: "json",
                        success: function(result){
                            if(result.message !=='' && result.status === true){ 
                                if(result.crypto_balance > 0){
                                    var c_blnc = result.crypto_balance;
                                    var t_amt = parseFloat(result.crypto_balance)+parseFloat(actualAmtExpect);
                                } else {
                                    var c_blnc = 0;
                                    var t_amt = parseFloat(actualAmtExpect);
                                }
                                
                                var currency_id = result.curr_id;
                                swal({
                                    title: "Transaction Confirmation",
                                    text: "You are buying " + actualAmtExpect + " " + currency_name + " at the current market rate of " + Number(coinRate).toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "\n\nUSD  Wallet:\nCurrent balance:$" +currentUsdBalance+"\nFinal balance:$"+finalusdBalance+"\n\n" + currency_name + "("+currency_value+ ")" + " Wallet:\n Current balance: " +c_blnc+"\n Final balance: " +t_amt+ "\n\nTransaction fee (0%): You will be charged a total amount of $0.00 to complete this transaction.",
                                    type: "warning",
                                    showCancelButton: true,
                                    confirmButtonClass: "btn-danger",
                                    confirmButtonText: "Confirm",
                                    cancelButtonText: "Cancel",
                                    closeOnConfirm: false,
                                    closeOnCancel: false,
                                    customClass: 'swal-wide'
                                },
                                function(isConfirm) {
                                    if (isConfirm) {
                                        swal({
                                            title: "Transaction successful",
                                            text: "USD Wallet: " + Number(finalusdBalance).toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "\n" + currency_name + " Wallet: Balance: "+t_amt,
                                            type: "success"
                                        },
                                        function(isConfirm) {
                                            if (isConfirm) {
                                                buyFormSubmit(amtVal, currency_purchased, coinRate, actualAmtExpect, t_amt, currency_id);  
                                            }
                                        });

                                    } else {
                                        swal("Cancelled", "You cancelled this transaction.", "error");
                                    }
                                });
                            } 
                        },
                        error: function(error){
                            console.log(error);
                        }
                    });
                }
            });

            function buyFormSubmit(amtVal, currency_purchased, coinRate, actualAmtExpect, balance, currency_id) {
                $.ajax({
                    type: 'POST',
                    url : "/confirm_coin_buy",
                    data : {amtVal: amtVal,currency_purchased: currency_purchased,coinRate: coinRate,actualAmtExpect:actualAmtExpect,balance:balance,currency_id:currency_id},
                    success:function(response) {
                        if(response.success == true){
                            window.location.href="/buy-and-sell-coins";
                        }
                    },
                    error:function(xhr) {
                        console.log(xhr);
                    }
                });
            }

            // Script for getting current coin rate for selling coin
            $('#currency_sold').on('change', function () {
                var currencyType =  $("#currency_sold option:selected").text();
                var msg = "Current Rate("+currencyType+")"+": "+"$ ";
                var amtVal = parseFloat(jQuery("#payAmount").val());
                if (currencyType !== '') {
                    $('.expected').removeClass('alert alert-danger');
                    $('.expected').html('');
                    $('.expected').hide();
                    $.ajax({
                        type: 'GET',
                        url: "https://coincap.io/page/"+currencyType, 
                        dataType: "json",
                        success: function(result){
                            $('#sell_coinRate').val(result.price_usd);
                            var roundUpPrice = parseFloat(Math.round(result.price_usd * 100) / 100).toFixed(2);
                            $('.currentrateexpected').html(msg+roundUpPrice);
                            $('#sell_currentratetext').addClass('alert alert-danger');
                            $('#sell_currentratetext').show();
                            $('#sell_currentratetext').html('Current Rate('+currencyType+')'+': $'+roundUpPrice);
                            $('.currentrateexpected').show();
                        },
                        error: function(error){
                            console.log(error);
                        }
                    });
                }
            });

            // Script for validating amount field in sell coins
            $('#sellAmount').on('keyup', function(event) {
                $(this).val($(this).val().replace(/[^0-9\.]/g,''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
                    event.preventDefault();
                    $('.sell_expected').addClass('alert alert-danger');
                    $('.sell_expected').html('Please enter a valid number.');
                    $('.sell_expected').show();
                    $('#sell_calculatedamount').html('');
                    $('#sell_calculatedamount').hide();
                }
                var amtVal = parseFloat(jQuery("#sellAmount").val());
                var coinRate = parseFloat(jQuery('#sell_coinRate').val());
                var selectopton = jQuery("#currency_sold").val();
                var currency_sold = jQuery("#currency_sold").val();
                var currencySellType = jQuery("#currency_sold option:selected").val();
                var cryptocurrency_bal = 0;
                var astatus = 0;
                if (!jQuery.isNumeric(jQuery("#sellAmount").val())) {
                    $('.sell_expected').addClass('alert alert-danger');
                    $('.sell_expected').html('Please enter a valid number.');
                    $('.sell_expected').show();
                } else if (amtVal === 0) {
                    $('.sell_expected').addClass('alert alert-danger');
                    $('.sell_expected').html('Currency amount should be more than 0');
                    $('.sell_expected').show();
                } else if (currencySellType === ''){
                    $('#sell_calculatedamount').html('');
                    $('#sell_calculatedamount').removeClass('alert alert-success');
                    $('#sell_calculatedamount').hide();

                } else {
                    var amtExpect = parseFloat(amtVal*coinRate);
                    var calcultedSellAmount = parseFloat(Math.round(amtExpect * 100) / 100).toFixed(2);
                    var currencyType =  $("#currency_sold option:selected").val();
                    if (isNaN(amtExpect)) {
                        $('#sell_calculatedamount').html('');
                        $('#sell_calculatedamount').removeClass('alert alert-success');
                        $('#sell_calculatedamount').hide();
                    }
                    $('#sell_converted_amount').val(amtExpect);
                    $('#sell_currentratetext').addClass('alert alert-danger');
                    $('#sell_calculatedamount').addClass('alert alert-success');
                    $('#sell_calculatedamount').show();
                    $('#sell_calculatedamount').html('Calculated Amount('+currencyType+')'+': $'+ parseFloat(calcultedSellAmount) );
                    $('.sell_expected').removeClass('alert alert-danger');
                    $('.sell_expected').html('');
                    $('.sell_expected').hide();
                    $('#cc-submit1').prop('disabled', false);
                    // ajax block
                    if (jQuery("#sellAmount").val() !== '') {
                        $.ajax({
                            type: 'POST',
                            data: {amtVal: amtVal,coinRate: coinRate,currencySellType: currencySellType},
                            url: "/sell-coin", 
                            dataType: "json",
                            success: function(result) {
                                if (result.message !=='' && result.status === true) { 
                                    if(result.crypto_balance > 0){
                                        cryptocurrency_bal = result.crypto_balance;
                                    } else {
                                        cryptocurrency_bal = "0";
                                    }
                                    
                                    if (amtVal > cryptocurrency_bal) {
                                        $('.sell_expected').addClass('alert alert-danger');
                                        $('.sell_expected').html('Amount exceeds currency balance.');
                                        $('.sell_expected').show();
                                        $('#sell_calculatedamount').html('');  
                                        $('#sell_calculatedamount').css('display','none');
                                        $('#cc-submit1').prop('disabled', true);
                                        astatus = 1;
                                    } else {
                                        $('#cc-submit1').prop('disabled', false);
                                    }
                                }
                            },
                            error: function(error) {
                                console.log(error);
                            }
                        });
                        if (astatus === '1') {
                            if (!jQuery.isNumeric(jQuery("#sellAmount").val())){
                                $('.sell_expected').addClass('alert alert-danger');
                                $('.sell_expected').html('Please enter a valid number.');
                                $('.sell_expected').show();
                                $('#cc-submit1').prop('disabled', true);
                            } else if (amtVal === '0') {
                                $('.sell_expected').addClass('alert alert-danger');
                                $('.sell_expected').html('Currency amount should be more than 0');
                                $('.sell_expected').show();
                                $('#cc-submit1').prop('disabled', true);
                            } else {
                                if (currency_sold === '') {      
                                    $('#sell_calculatedamount').html('');
                                    $('#sell_calculatedamount').removeClass('');
                                    $('#sell_calculatedamount').css('display','none');
                                    var amtExpect = parseFloat(amtVal*coinRate);
                                    if (isNaN(amtExpect)) {
                                        $('#sell_calculatedamount').html('');
                                        $('#sell_calculatedamount').removeClass('');
                                        $('#sell_calculatedamount').css('display','none');
                                    }
                                } else {
                                    var amtExpect = parseFloat(amtVal*coinRate);
                                    var calcultedSellAmount = parseFloat(Math.round(amtExpect * 100) / 100).toFixed(2);
                                    var currencyType =  $("#currency_sold option:selected").val();
                                    $("#sell_converted_amount").val(amtExpect);
                                    $('#sell_currentratetext').addClass('alert alert-danger');
                                    $('#sell_calculatedamount').addClass('alert alert-success');
                                    jQuery('#sell_calculatedamount').show();
                                    jQuery('#sell_calculatedamount').html('Calculated Amount('+currencyType+')'+': $'+ parseFloat(calcultedSellAmount) );
                                    $('.sell_expected').removeClass('alert alert-danger');
                                    $('.sell_expected').html('');
                                    $('.sell_expected').hide();
                                    $('#cc-submit1').prop('disabled', false);
                                }
                            }
                        }
                    }
                    // end ajax block
                }
                // end refining of block
            });

            // Script for handling submission of sell request of coin
            $('#cc-submit1').on('click', function(e) {
                e.preventDefault();
                var amount = $('#sellAmount').val();
                var currencySellType = $('#currency_sold').val();
                if (amount === '') {
                    $('.sell_expected').addClass('alert alert-danger');
                    $('.sell_expected').html('Please enter amount');
                    $('.sell_expected').show();
                } else if(currencySellType === '') {
                    $('.sell_expected').addClass('alert alert-danger');
                    $('.sell_expected').html('Please choose a currency to sell');
                    $('.sell_expected').show();
                    // added later
                    $('#sell_currentratetext').html('');
                    $('#sell_currentratetext').removeClass('alert alert-danger');
                    $('#sell_currentratetext').hide();
                    $('#sell_calculatedamount').html('');
                    $('#sell_calculatedamount').removeClass('alert alert-success');
                    $('#sell_calculatedamount').hide();
                    // end
                } else {
                    var amtVal = jQuery("#sellAmount").val();
                    var coinRate = jQuery("#sell_coinRate").val();
                    var actualAmtExpect = parseFloat(amtVal/coinRate);
                    var currency_sold = jQuery("#currency_sold").val();
                    var user_id = {{user.id}};
                    var currency_name = jQuery( "#currency_sold option:selected" ).text();
                    var currency_value = jQuery("#currency_sold option:selected").val();
                    var totalAmtExpect = 0;
                    var currentUsdBalance = {{user.currentUsdBalance}};
                    currentUsdBalance = parseFloat(Math.round(currentUsdBalance * 100) / 100).toFixed(2);
                    var finalusdBalance = amtVal * Number(coinRate);
                    finalusdBalance = parseFloat(finalusdBalance) + parseFloat(currentUsdBalance);
                    finalusdBalance = parseFloat(Math.round(finalusdBalance * 100) / 100).toFixed(2);
                    $('.sell_expected').removeClass('alert alert-danger');
                    $('.sell_expected').html('');
                    $('.sell_expected').hide();
                    $.ajax({
                        type: 'POST',
                        data: {amtVal: amtVal,coinRate: coinRate,currencySellType: currencySellType},
                        url: "/sell-coin", 
                        dataType: "json",
                        success: function(result){
                            if (result.message !=='' && result.status === true) { 
                                totalAmtExpect = parseFloat(result.crypto_balance+actualAmtExpect);
                                if(result.crypto_balance > 0){
                                    var c_blnc = result.crypto_balance;
                                    var t_amt = parseFloat(result.crypto_balance)-parseFloat(amtVal);
                                } else {
                                    var c_blnc = "0";
                                    var t_amt = "0";
                                }
                                var currency_id = result.curr_id;
                                swal({
                                    title: "Transaction Confirmation",
                                    text: "You are selling " + amtVal + " " + currency_name + " at the current market rate of " + Number(coinRate).toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "\n\nUSD  Wallet:\nCurrent balance:$" +currentUsdBalance+"\nFinal balance:$"+finalusdBalance+"\n\n" + currency_name + "("+currency_value+ ")" + " Wallet:\n Current balance: " +c_blnc+"\n Final balance: " +t_amt+ "\n\nTransaction fee (0%): You will be charged a total amount of $0.00 to complete this transaction.",
                                    type: "warning",
                                    showCancelButton: true,
                                    confirmButtonClass: "btn-danger",
                                    confirmButtonText: "Confirm",
                                    cancelButtonText: "Cancel",
                                    closeOnConfirm: false,
                                    closeOnCancel: false,
                                    customClass: 'swal-wide'
                                },
                                function(isConfirm) {
                                    if (isConfirm) {
                                        swal({
                                            title: "Transaction successful",
                                            text: "USD Wallet: " + Number(finalusdBalance).toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "\n" + currency_name + " Wallet: Balance: "+t_amt,
                                            type: "success"
                                        },
                                        function(isConfirm) {
                                            if (isConfirm) {
                                                coinRate = parseFloat(Math.round(coinRate * 100) / 100).toFixed(2);
                                                sellFormSubmit(finalusdBalance, coinRate, amtVal, currencySellType, t_amt, currency_id);  
                                            }
                                        });
                                    } else {
                                        swal("Cancelled", "You cancelled this transaction.", "error");
                                    }
                                });
                            }
                        },
                        error: function(error){
                            console.log(error);
                        }
                    });
                }
            });

            function sellFormSubmit(finalusdBalance, coinRate, amtVal, currencySellType, balance, currency_id) {
                $.ajax({
                    type: 'POST',
                    url : "/confirm_coin_sell",
                    data : {finalusdBalance: finalusdBalance,coinRate: coinRate,amtVal: amtVal,currencySellType:currencySellType,balance:balance,currency_id:currency_id},
                    success:function(response) {
                        if (response.success == true) {
                            window.location.href="/buy-and-sell-coins";
                        }
                    },
                    error:function(xhr) {
                        console.log(xhr);
                    }
                });
            }

            jQuery( "#amount_invest" ).click(function() {
                jQuery( "#investerrormsg" ).empty();
                jQuery( "#investerrormsg" ).hide();
            });

            $('#amount_invest').on('keyup', function(event) {
                $(this).val($(this).val().replace(/[^0-9\.]/g,''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
                    event.preventDefault();
                    jQuery( "#investerrormsg" ).html('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Please enter a valid number</p>');
                    $('#investerrormsg').show();
                } else {
                    $('#investerrormsg').hide();
                    $('#investerrormsg').html('');
                }
            });

            jQuery( "#amt_invest_btn" ).click(function() {
                var amountinvest = jQuery( "#amount_invest" ).val();	
                var useramountUSD = jQuery( "#useramountUSD" ).val();	
                jQuery( "#investerrormsg" ).show();
                jQuery( "#investerrormsg" ).empty();
                if (useramountUSD >= 10000) {
                    if (amountinvest >= 10000) {
                        return true;
                    } else {
                        jQuery( "#investerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Amount should be equal or greater than $10,000</p>');
                        return false;
                    }
                } else {
                    jQuery( "#investerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Your USD account balance is too low i.e. ($'+useramountUSD+'). The minimum investment amount should be equal or greater then $10,000.</p>');
                    return false;
                }
            });

            jQuery("#amount_withdraw").on('click', function() {
                jQuery( "#withdrawerrormsg" ).empty();
                jQuery( "#withdrawerrormsg" ).hide();
            });

            $('#amount_withdraw').on('keyup', function(event) {
                $(this).val($(this).val().replace(/[^0-9\.]/g,''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
                    event.preventDefault();
                    jQuery( "#withdrawerrormsg" ).html('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Please enter a valid number</p>');
                    $('#withdrawerrormsg').show();
                } else {
                    $('#withdrawerrormsg').hide();
                    $('#withdrawerrormsg').html('');
                }
            });

            jQuery( "#amt_withd_btn" ).click(function() {
                var amountwithdraw =  jQuery( "#amount_withdraw" ).val();	
                var useramountUSD =  jQuery( "#useramountUSD" ).val();	
                jQuery( "#withdrawerrormsg" ).show();
                jQuery( "#withdrawerrormsg" ).empty();
                if (useramountUSD >= 10000) {
                    if (amountwithdraw >= 1000) {
                        return true;
                    } else {
                        jQuery( "#withdrawerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Amount should be equal or greater than $1000</p>');
                        return false; 
                    }
                } else {								
                    jQuery( "#withdrawerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Your USD account balance is too low i.e. ($'+useramountUSD+'). The minimum withdraw amount should be equal or greater then $1000.</p>');
                    return false;
                }
            });

            /*Script for handling deletion of shareholder details */
            $('.deleteShareholderInfo').on('click', function(){
                var shareholderId = $(this).data("sid");
                
                $.ajax({
                    type: 'POST',
                    data: {shareholderId: shareholderId},
                    url: "/remove-shareholderInfo", 
                    dataType: "json",
                    success: function(response) {
                        window.location.href = "/account-settings";
                    },
                    error: function(error) {
                        console.log(error);
                    }
                });

            });

            // Dashboard display cryptocurrency list in table starts
            $tr = "";
            $.ajax({
                type: "GET",
                crossDomain: true,
                dataType: 'json',
                url: "https://api.coinmarketcap.com/v1/ticker/",
                success: function (resp) {
                    $(resp).each(function (i) {
                        if (resp[i].percent_change_24h > 0) { $class = "green"; } else { $class = "red"; }
                        var market_cap_usd = parseFloat(resp[i].market_cap_usd);
                        var price_usd = parseFloat(resp[i].price_usd);
                        var market_vol_usd = parseFloat(resp[i]["24h_volume_usd"]);
                        var market_cap_usd = market_cap_usd.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        var price_usd = price_usd.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        var market_vol_usd = market_vol_usd.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                        $tr = $tr + '<tr><td class="currency-name"><div class="s-s-' + resp[i].id + ' currency-logo-sprite"></div> <span class="currency-symbol">' + resp[i].name + '</span></td><td>$' + market_cap_usd + '</td><td>$' + price_usd + '</td><td>$' + market_vol_usd + '</td><td class="' + $class + '">' + resp[i].percent_change_24h + '%</td>';
                    });
                    $("#currency_table").html($tr);
                    $('#example1').DataTable({
                        "order": [[1, "desc"]],
                        "aLengthMenu": [[5, 10, 15, 20, 25, -1], [5, 10, 15, 20, 25, "All"]],
                        "pageLength": 5
                    });
                },
                error: function (xhr) {
                }
            });
            // Dashboard display cryptocurrency list in table ends     

            // Support form validation starts
            $("#submit-a-request").validate({
                rules: {
                    subject: {
                        required: true
                    },
                    description: {
                        required: true
                    }           
                },
                messages: {
                    subject: {
                        required: "Please enter a subject"
                    },
                    description: {
                        required: "Please enter description"
                    }
                }
            });
            // Support form validation ends
            // Notes form validation starts
            $("#notes_form").validate({
                rules: {
                    notes: {
                        required: true
                    }
                },
                messages: {
                    notes: {
                        required: "Please enter your notes"
                    }
                }
            });
            
            $("#submitQuestionaireBtn").click(function(){
                $("#financialForm").submit();
            });
            $('#financialForm').validate({
                submitHandler: function (form) { 
                    var finalcialData = $('#financialForm').serializeArray();
                    $.ajax({
                        type: 'POST',
                        url : "/save-questionnaire",
                        data : {finalcialData: finalcialData},
                        success:function(response) {
                                if(response.success == 1){
                                    swal({
                                        icon: "success",
                                        title: response.msg,
                                        confirmButtonClass: "btn-success",
                                        confirmButtonText: "OK"
                                    },function(isConfirm){
                                        
                                    });
                                } 
                        },
                        error:function(xhr) {
                            console.log(xhr);
                        }
                    });
                    return false;
                }
            });
             $('.radio-active').each(function(index) {
                $(this).rules('add', {
                    required: true,
                    messages: {
                        required:  "Please select an option"
                    }
                });
            }); 
            $('#country').on('change', function() {
                var countryCode = $(this).val();
                if(countryCode === '226'){
                    $('#usa_states').css('display','block');
                    $('#state').css('display','none');
                }
                else{
                    $('#usa_states').css('display','none');
                    $('#state').css('display','block');
                }
            });
            
            /* Display selected country value */
            $("#usa_states option").each(function() {
            // alert(this.text + ' ' + this.value);
                 if(this.value == "{{user.state}}"){
                    $(this).attr("selected", "selected");
                 } 
            });  

            /*Script for validating institutional form in Managed cryptocurrency page */

			 $("#institution_form_save").click(function(e) {
                $("#institutionalForm").submit();
            });

            $("#institutionalForm").validate({
                rules: {
                    business_name: {
                        required: true
                    },
                    business_number: {
                        required: true,
                        number: true,
                    },
                    business_registration_country: {
                        required: true
                    }
                },
                messages: {
                    business_name: {
                        required: "Please enter registered business name"
                    },
                    business_number: {
                        required: "Please enter business number",
                        number: "It must be number"
                    },
                    business_registration_country: {
                        required: "Please enter business country"
                    }
                },
                submitHandler:function(form) {
                    $.ajax({
                        type: "POST",
                        url: "/save-institutionalIndividual-data",
                        data: {
                            business_name: $("#business_name").val(),
                            business_number: $("#business_number").val(),
                            business_registration_country: $("#business_registration_country").val(),
                            invest_amount: $("#investques").val(),
                            individualOrInstitutional_type: $("input:radio[name=investor_type]:checked").val(),
                            settlement_currency: $("#settlement_currency").val()
                        
                        },
                        success:function(response) {
                            console.log('Saved successfully');
                            swal({
                                icon: "success",
                                title: response.msg,
                                confirmButtonClass: "btn-success",
                                confirmButtonText: "OK"
                            },function(isConfirm){
                                if(isConfirm){
                                    window.location.href = "/managed-cryptocurrency-portfolio";
                                }
                            });

                        },
                        error: function(xhr) {
                            console.log('Error');
                        }
                    }); 


                }
            });

            /*Script for validating individual form in Managed cryptocurrency page */
            $("#individual_form_save").click(function(e){
                $("#individualForm").submit();
            });

            $("#individualForm").validate({
                rules: {
                    first_name: {
                        required: true
                    },
                    last_name: {
                        required: true
                    },
                    residence_country_individual: {
                        required: true
                    }
                },
                messages: {
                    first_name: {
                        required: "Please enter first name"
                    },
                    last_name: {
                        required: "Please enter last name"
                    },
                    residence_country_individual: {
                        required: "Please enter country of residence"
                    }
                },
                submitHandler:function(form) {
                    $.ajax({
                        type: "POST",
                        url: "/save-institutionalIndividual-data",
                        data: {
                            first_name: $("#first_name").val(),
                            last_name: $("#last_name").val(),
                            residence_country_individual: $("#residence_country_individual").val(),
                            invest_amount_individual: $("#investques_individual").val(),
                            settlement_currency_individual: $("#settlement_currency_individual").val(),
                            individualOrInstitutional_type: $("input:radio[name=investor_type]:checked").val()
                        
                        },
                        success:function(response) {
                            swal({
                                icon: "success",
                                title: response.msg,
                                confirmButtonClass: "btn-success",
                                confirmButtonText: "OK"
                            },function(isConfirm){
                                if(isConfirm){
                                    window.location.href = "/managed-cryptocurrency-portfolio";
                                }
                            });

                        },
                        error: function(xhr) {
                            console.log('Error');
                        }
                    }); 


                }
            });

            /* Script for validating institute modal form */
            
            $('#submit_institution_modal_data').on('click', function(){
                $('#instituteModalForm').submit();
            });

            $('#instituteModalForm').validate({
                ignore: [],
                 rules: {
                    account_name: {
                        required: true
                    },
                    bank_country: {
                        required: true
                    },
                    account_number: {
                        required: true,
                        number: true,
                        minlength: 7,
                        maxlength: 7
                    },
                    routing_number: {
                        required: true,
                        number: true,
                        minlength: 9,
                        maxlength: 9
                    },
                    phone_number: {
                        required: true,
                        number: true
                    },
                    email_address: {
                        required: true,
                        email: true
                    },
                    'shareholder_name[]': {
                        required: true
                    },
                    'articles_incorporation[]': {
                        required: true,
                        extension: 'jpg|JPG|jpeg|JPEG|png|PNG|pdf|PDF|doc|docx|DOC|DOCX'
                    },
                    'shareholder_id[]': {
                        required: true,
                        extension: 'jpg|JPG|jpeg|JPEG|png|PNG|pdf|PDF|doc|docx|DOC|DOCX'
                    }
                },
                messages: {
                    account_name: {
                        required: "Please enter bank account holder name"
                    },
                    bank_country: {
                        required: "Please enter country of bank account"
                    },
                    account_number: {
                       required: "Please enter account number",
                       number: "Only numbers are accepted",
                       minlength: "Account number can have exactly 7 digits",
                       maxlength: "Account number can have exactly 7 digits"
                    },
                    routing_number: {
                        required: "Please enter routing number",
                        number: "Only numbers are accepted",
                        minlength: "Routing number can have exactly 9 digits",
                        maxlength: "Routing number can have exactly 9 digits"
                    },
                    phone_number: {
                        required: "Please enter phone number",
                        number: "Only numbers are accepted"
                    },
                    email_address: {
                        required: "Please enter email address",
                        email: "Please enter valid email address"
                    },
                    'shareholder_name[]': {
                        required: "Please enter shareholder name"
                    },
                    'articles_incorporation[]': {
                        required: "Please upload address proof",
                        extension: 'Invalid file type'
                    },
                    'shareholder_id[]': {
                        required: "Please upload govt issue id",
                        extension: 'Invalid file type'
                    }
                },
                submitHandler:function(form) {

                    var form_data = new FormData();
                    var upload_file_name = [];
                    var proof_of_address = [];
                    var shareholder_name = [];
                    $(".file-institute").each(function(index) {
                        
                        if(this.files[0]) {
                            upload_file_name.push({
                                folder_name: $(this).data('temp-name'),
                                temp_file_name: this.files[0].name
                            })
                            form_data.append('upload_docs', this.files[0]);
                        }
                    });
                    $(".file-dynmc").each(function(index) {
                        if(this.files[0]) {
                            proof_of_address.push({
                                folder_name: $(this).data('temp-name'),
                                folder_name_another: $(".file-dynmc-1").data('temp-name'),
                                temp_file_name: this.files[0].name
                            })
                            form_data.append('upload_docs_dynmc', this.files[0]);
                            form_data.append('upload_docs_dynmc-1', $(".file-dynmc-1")[index].files[0]);
                            
                        }
                    });
                    $(".shareholder_name").each(function(index) {
                        form_data.append('shareholder_name', $(this).val());
                    });
                    form_data.append('upload_file_name',JSON.stringify(upload_file_name));
                    form_data.append('proof_of_address',JSON.stringify(proof_of_address));
                    
                    form_data.append('account_name', $("#account_name").val());
                    form_data.append('bank_country', $("#bank_country").val());
                    form_data.append('account_number', $("#account_number").val());
                    form_data.append('routing_number', $("#routing_number").val());
                    form_data.append('phone_number', $("#phone_number").val());
                    form_data.append('email_address', $("#email_address").val());

                    $.ajax({
                        type: "POST",
                        url: "/save-institutionalModalData",
                        data: form_data,
                        cache: false,
                        processData: false,
                        contentType: false,
                        beforeSend: function() {
                            $(".loader-gif").css('display', 'block');
                            $("#submit_institution_modal_data").prop('disabled', true);
                        },
                        success: function(response) {
                            
                            $(".loader-gif").css('display', 'none');
                            $("#submit_institution_modal_data").prop('disabled', false);
                            
                            swal({
                                icon: "success",
                                title: response.msg,
                                confirmButtonClass: "btn-success",
                                confirmButtonText: "OK"
                            },function(isConfirm){
                                if(isConfirm){
                                    window.location.href = "/managed-cryptocurrency-portfolio";
                                }
                            });
                            
                        },
                        error: function(xhr) {
                            $(".loader-gif").css('display', 'none');
                            $("#submit_institution_modal_data").prop('disabled', false);
                        }
                    });
                }
            });
            
            // validation for dynamically generated elements in institutional user's form

            /*
            $('.multiple_div > #shareholder_div > #name .appnd').find('.shareholder_name').each(function(index) {
                $(this).rules('add', {
                    required: true,
                    messages: {
                        required:  "Please enter first and last name"
                    }
                });
            }); 
            */

            /* Script for validating individual modal form */
            
            $('#submit_individual_modal_data').on('click', function(){
                $('#individualModalForm').submit();
            });

            $('#individualModalForm').validate({
                 rules: {
                    account_name_individual: {
                        required: true
                    },
                    bank_country_individual: {
                        required: true
                    },
                    account_number_individual: {
                        required: true,
                        number: true,
                        minlength: 7,
                        maxlength: 7
                    },
                    routing_number_individual: {
                        required: true,
                        number: true,
                        minlength: 9,
                        maxlength: 9
                    },
                    phone_number_individual: {
                        required: true,
                        number: true
                    },
                    email_address_individual: {
                        required: true,
                        email: true
                    }
                },
                messages: {
                    account_name_individual: {
                        required: "Please enter bank account holder name"
                    },
                    bank_country_individual: {
                        required: "Please enter country of bank account"
                    },
                    account_number_individual: {
                       required: "Please enter account number",
                       number: "Only numbers are accepted",
                       minlength: "Account number can have exactly 7 digits",
                       maxlength: "Account number can have exactly 7 digits"
                    },
                    routing_number_individual: {
                        required: "Please enter routing number",
                        number: "Only numbers are accepted",
                        minlength: "Routing number can have exactly 9 digits",
                        maxlength: "Routing number can have exactly 9 digits"
                    },
                    phone_number_individual: {
                        required: "Please enter phone number",
                        number: "Only numbers are accepted"
                    },
                    email_address_individual: {
                        required: "Please enter email address",
                        email: "Please enter valid email address"
                    }
                },
                submitHandler:function(form) {

                    var form_data = new FormData();
                    var upload_file_name = [];
                    $(".file").each(function(index) {
                        if(this.files[0]) {
                            upload_file_name.push({
                                folder_name: $(this).data('temp-name'),
                                temp_file_name: this.files[0].name
                            })
                            form_data.append('upload_docs', this.files[0]);
                        }
                    });
                    form_data.append('upload_file_name',JSON.stringify(upload_file_name));
                    
                    form_data.append('account_name_individual', $("#account_name_individual").val());
                    form_data.append('bank_country_individual', $("#bank_country_individual").val());
                    form_data.append('account_number_individual', $("#account_number_individual").val());
                    form_data.append('routing_number_individual', $("#routing_number_individual").val());
                    form_data.append('phone_number_individual', $("#phone_number_individual").val());
                    form_data.append('email_address_individual', $("#email_address_individual").val());

                    $.ajax({
                        type: "POST",
                        url: "/save-individualModalData",
                        data: form_data,
                        cache: false,
                        processData: false,
                        contentType: false,
                        beforeSend: function() {
                            $(".loader-gif").css('display', 'block');
                            $("#submit_individual_modal_data").prop('disabled', true);
                        },
                        success: function(response) {
                            //window.location.href = "/managed-cryptocurrency-portfolio";
                            $("#div_individual_modal").css('display', 'block');
                            $(".loader-gif").css('display', 'none');
                            $("#submit_individual_modal_data").prop('disabled', false);
                            $('#div_individual_modal').delay(5000).fadeOut();
                        },
                        error: function(xhr) {
                            $(".loader-gif").css('display', 'none');
                            $("#submit_individual_modal_data").prop('disabled', false);
                        }
                    });
                }
            });

        });
    </script>
    
    <script>    
                function load_donut_chart(chart_data) {
                    var colorArray = ['#991AFF', '#E666FF', '#4DB3FF', '#1AB399', '#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D', '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC', '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399', '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933', '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF', '#B366CC', '#4D8000', '#B33300', '#CC80CC', '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399', '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680'];
                    var donut = new Morris.Donut({ 
                     element: 'sales-chart', 
                     resize: true,              
                     colors: colorArray, 
                    data: chart_data, 
                    hideHover: 'auto',
                    formatter: function (value, data) { 
                        return nFormatter(value, 2); 
                    } 
                }); 
                }
                $(function () {
                 "use strict"; 
                 //DONUT CHART 
                 $.get("/get-donut-chart", function( data ) {
                    load_donut_chart(data.chart_array);
                });
                 
            }); 
    </script> <!-- Currency balance chart ends -->

    <script type="text/javascript"> 
        var copyBtn = $("#clipboardBtn");
        input = $("#copy-me");

        function copyToClipboardFF(text) {
            window.prompt ("Copy to clipboard: Ctrl C, Enter", text);
        }

        function copyToClipboard() {
            //alert('copied to clipboard');
            var success = true,
            range = document.createRange(),
            selection;
            // For IE.
            if (window.clipboardData) {
                window.clipboardData.setData("Text", input.val());        
            } 
            else {
                // Create a temporary element off screen.
                var tmpElem = $('<div>');
                tmpElem.css({
                    position: "absolute",
                    left:     "-1000px",
                    top:      "-1000px",
                });
                // Add the input value to the temp element.
                tmpElem.text(input.val());
                $("body").append(tmpElem);
                // Select temp element.
                range.selectNodeContents(tmpElem.get(0));
                selection = window.getSelection ();
                selection.removeAllRanges ();
                selection.addRange (range);
                // Lets copy.
                try { 
                    success = document.execCommand ("copy", false, null);
                }
                catch (e) {
                    copyToClipboardFF(input.val());
                }
                if (success) {
                    tmpElem.remove();
                }
            }
        }
        copyBtn.on('click', copyToClipboard);
    </script>

    <!-- Starts Script for Propagation & Sliding -->
    <script type="text/javascript">
        $(document).ready(function () {
            $("#bal-anchor").click(function () {
                $(".balance-box .left").slideToggle();
            });
            $("#rate-anchor").click(function () {
                $(".rates-box .right").slideToggle();
            });
        });

        $("#bal-anchor,#rate-anchor").click(function (e) {
            e.stopPropagation();
        });

        //$(document).click(function () {
            //$(".balance-box .left,.rates-box .right").slideUp();
        //});

        $("#bal-anchor").click(function (e) {
            $(".rates-box .right").slideUp();
            $(".dropdown").removeClass("open");
        });

        $("#rate-anchor").click(function (e) {
            $(".balance-box .left").slideUp();
            $(".dropdown").removeClass("open");
        });

        $("#clickme").click(function (e) {
            $(".balance-box .left").slideUp();
            $(".rates-box .right").slideUp();
        });
    </script>
    <!-- Ends Script for Propagation & Sliding -->

    <!-- Starts Script for Header Rates & Balances -->
    {{#each user.currency}}
        <script type="text/javascript">
                //Rates
                $.ajax({
                    type: "GET",
                    crossDomain: true,
                    dataType: 'json',
                    url: "https://coincap.io/page/{{this.currency_id}}",
                    success: function (resp) {
                        $(".cr_{{this.currency_id}}").append(' ' + resp.price_usd.toFixed(2));
                    },
                    error: function (xhr) {
                    }
                });
        </script>
    {{/each}}
    <!-- Ends Script for Header Rates & Balances -->

    {{!-- Script for calculating balance in the dashboard page --}}
    {{#each user.currencyBalance}}
        <script type="text/javascript">

            function formatNumber(num) {
                return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");

            }
                    
            var usdPrice = 0;
            $.ajax({
                    type: "GET",
                    crossDomain: true,
                    dataType: 'json',
                    url: "https://coincap.io/page/{{this.Currency.currency_id}}",
                    success: function (resp) {
                        usdPrice = parseFloat({{this.balance}} * resp.price_usd).toFixed(2);
                        $(".wallet_dollar_{{this.Currency.currency_id}}").append('$' + formatNumber(usdPrice));
                    },
                    error: function (xhr) {
                    }
            });
        </script>
    {{/each}}
    {{!-- Ends Script for calculating balance in the dashboard page --}}

    {{!-- Format numbers starts --}}
    <script>
      function nFormatter (num, digits) {
        var si = [{
            value: 1,
            symbol: ""
          },
          {
            value: 1E3,
            symbol: "k"
          },
          {
            value: 1E6,
            symbol: "M"
          },
          {
            value: 1E9,
            symbol: "B"
          },
          {
            value: 1E12,
            symbol: "T"
          },
          {
            value: 1E15,
            symbol: "P"
          },
          {
            value: 1E18,
            symbol: "E"
          }
        ];
        var rx = /\.0+$|(\.[0-9]*[1-9])0+$/;
        var i;
        for (i = si.length - 1; i > 0; i--) {
          if (num >= si[i].value) {
            break;
          }
        }
        return (num / si[i].value).toFixed(digits).replace(rx, "$1") + si[i].symbol;
      }
    </script>
    {{!-- Format numbers ends --}}
    {{!-- Dashboard display latest posts starts --}}
    <script>
        $listing = "";
        $.ajax({
          type: "GET",
          crossDomain: true,
          dataType: 'json',
          url: "https://coinjolt.com/wp-json/wp/v2/posts?page=1&per_page=4",
          success: function (resp) {
            $(resp).each(function (i) {
              $listing = $listing + '<div class="col-md-6 col-sm-6 col-xs-6 paddingleft recent_post_box "><a style="color: #000;" href="https://coinjolt.com/' + resp[i].slug + '" target="_blank"><p><img class="img_' + resp[i].id +'" style="width:100%;" src="dist/img/lading_icon.gif"></p><h3 class="post-title">' + resp[i].title.rendered + '</h3></a><p class="subdetails">CoinJolt.com</p></div>';
              getPostImage(resp[i].id, resp[i].featured_media);
            });
            $(".ltnews").html($listing);
            $(".blog-img").hide();
          },
          error: function (xhr) {
          }
        });
        function getPostImage(postId, mediaId) {
            $.ajax({
                type: "GET",
                crossDomain: true,
                dataType: 'json',
                url: "https://coinjolt.com/wp-json/wp/v2/media/" + mediaId,
                success: function (rsp) {
                    $(".img_" + postId).attr("src",rsp.guid.rendered);
                },
                error: function (xhr) {
                    //$(".img_" + postId).hide();
                }
            });
        }
    </script>
    {{!-- Dashboard display latest posts ends --}}
    {{!-- MCP Piechart starts --}}
    <script type="text/javascript">
      google.charts.load("current", {packages:["corechart"]});
      google.charts.setOnLoadCallback(drawChart);
      function drawChart() {
        var data = google.visualization.arrayToDataTable([
          ['Language', 'Speakers (in millions)'],
          ['Bitcoin', 4],
          ['Ethereum',  1.2],
          ['ICO Tokens', 1],
          ['Alt Coins', 1],
          ]);

        var options = {
          is3D: true,
          slices: [{color: '#fc7c59'}, {color: '#ed5565'}, {color: '#ec87c0'}, {color: '#5d9cec'}],
             width:'100%',
             height:'100%',
            // chartArea:{left: '0', top: '0%',height: '80%', width: '80%'}
            // legend: 'none',
            pieSliceText: 'label',
            title: '',
            // pieStartAngle: 100,
            
            chartArea:{left:10,top:10,width:'100%',height:'100%'},

            
            // slices: [{color: '#fc7c59'}, {color: '#ed5565'}, {color: '#ec87c0'}, {color: '#5d9cec'}],
            tooltip:{'text':'percentage'}

          };
          var chart = new google.visualization.PieChart(document.getElementById('piechart_3d'));
          chart.draw(data, options);
        }
    </script>
    {{!-- MCP Piechart ends --}}
    {{!-- Transaction Graph starts --}}
    <script>
    $(function () {
      /* ChartJS
       * -------
       * Here we will create a few charts using ChartJS
       */

       var buy_arr = $("#buy_arr").val();
       var sell_arr = $("#sell_arr").val();
       var deposit_arr = $("#deposit_arr").val();
       var withdraw_arr = $("#withdraw_arr").val();

      var areaChartData = {
        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
        datasets: [{
            label: 'Buy',
            fillColor: 'rgba(210, 214, 222, 1)',
            strokeColor: 'rgba(210, 214, 222, 1)',
            pointColor: 'rgba(210, 214, 222, 1)',
            pointStrokeColor: '#c1c7d1',
            pointHighlightFill: '#fff',
            pointHighlightStroke: 'rgba(220,220,220,1)',
            data: [{{buy_arr}}]
          },
          {
            label: 'Sell',
            fillColor: 'rgba(60,141,188,0.9)',
            strokeColor: 'rgba(60,141,188,0.8)',
            pointColor: '#3b8bba',
            pointStrokeColor: 'rgba(60,141,188,1)',
            pointHighlightFill: '#fff',
            pointHighlightStroke: 'rgba(60,141,188,1)',
            data: [{{sell_arr}}]
          },
          {
            label: 'Deposit',
            fillColor: '#F08080',
     		strokeColor: '#F08080',
     		pointColor: '#F08080',
     		pointStrokeColor: '#F08080',
     		pointHighlightFill: '#fff',
     		pointHighlightStroke: '#F08080',
            data: [{{deposit_arr}}]
          },
          {
            label: 'Withdraw',
            fillColor: '#335EFF',
     		strokeColor: '#335EFF',
     		pointColor: '#335EFF',
     		pointStrokeColor: '#335EFF',
     		pointHighlightFill: '#fff',
     		pointHighlightStroke: '#335EFF',
            data: [{{withdraw_arr}}]
          }
        ]
      }
      //-------------
      //- BAR CHART -
      //-------------
      var barChartCanvas1 = $('#barChart1').get(0).getContext('2d');
      var barChart1 = new Chart(barChartCanvas1);
      var barChartData = areaChartData;
      barChartData.datasets[1].fillColor = '#00a65a';
      barChartData.datasets[1].strokeColor = '#00a65a';
      barChartData.datasets[1].pointColor = '#00a65a';
      var barChartOptions = {
        //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
        scaleBeginAtZero: true,
        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,
        //String - Colour of the grid lines
        scaleGridLineColor: 'rgba(0,0,0,.05)',
        //Number - Width of the grid lines
        scaleGridLineWidth: 1,
        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,
        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,
        //Boolean - If there is a stroke on each bar
        barShowStroke: true,
        //Number - Pixel width of the bar stroke
        barStrokeWidth: 2,
        //Number - Spacing between each of the X value sets
        barValueSpacing: 5,
        //Number - Spacing between data sets within X values
        barDatasetSpacing: 1,
        //String - A legend template
        legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
        //Boolean - whether to make the chart responsive
        responsive: true,
        maintainAspectRatio: true,
        scaleLabel: function (valuePayload) {
            return nFormatter(valuePayload.value, 2);
        }
      }
      barChartOptions.datasetFill = false
      barChart1.Bar(barChartData, barChartOptions)
    });

    var investor_type = '{{investor_type}}';
    
    if(investor_type == 2) {
        individualForm();
    }
    else {
        institutionForm();
    }

	function showform(){
		alert("loaded");
	}
	function institutionForm(){
		var form = document.getElementById('institutional_form');
		var individual_form = document.getElementById('individual_form');
		form.style.display = "block";
		individual_form.style.display = "none";
	}
	function individualForm(){
		var form = document.getElementById('institutional_form');
		var individual_form = document.getElementById('individual_form');
		form.style.display = "none";
		individual_form.style.display = "block";
	}

    /* Function for adding dynamic fields in institutional form's shareholder */
    function append(event){
        event.preventDefault();
        var shareholder = document.getElementById('test');

        $('#shareholder_div').append('<div class="multiple_div"><div class="col-md-4" id="name"><div class="form-group appnd"><label for="shareholder_name">Name:</label><input type="text" name="shareholder_name[]" class="form-control shareholder_name" id="shareholder_name" value=""><label for="shareholder_name" generated="true" class="error"></label></div></div><div class="col-md-4 " id="address"><div class="form-group articles_incorporation_div appnd" ><label>Proof of Address:</label><input type="file" name="articles_incorporation[]" class="form-control articles_incorporation file-dynmc" id="" data-temp-name="address_proof"><label for="articles_incorporation" generated="true" class="error"></label></div></div><div class="col-md-4 " id="government_id"  ><div class="form-group appnd"><label>Government Issued ID:</label><input type="file" name="shareholder_id[]" class="form-control shareholder_id file-dynmc-1" id="shareholder_id" value="" data-temp-name="govt_id"><label for="shareholder_id" generated="true" class="error"></label></div></div></div>');
        document.getElementById('remove').removeAttribute('disabled','disabled');
    }

        function remove(event){
            event.preventDefault();
            var multiple_div = document.getElementsByClassName('multiple_div');
            var x = multiple_div.length; 
            if(x == 1 ){
                document.getElementById('remove').setAttribute('disabled','disabled');
                multiple_div[x-1].parentNode.removeChild(multiple_div[x-1]);
            // multiple_div[0].style.display = "block";
            }else if(x > 1){               
                multiple_div[x-1].parentNode.removeChild(multiple_div[x-1]);
                if(x == 1){
                    document.getElementById('remove').setAttribute('disabled','disabled');
                }
            }
        }

  </script>
  <!--Starts Script for Auto Height -->
   
    <script>
        var maxHeight = 0;
        $('.equalize-box1').each(function (i) {
            var height = $('.equalize-box1').eq(i).height();
            if (height > maxHeight)
                maxHeight = height;
        });

        $('.equalize-box1').height(maxHeight);
    </script>
      <script>
        var maxHeight = 0;
        $('.balnrecent .equal-hgt').each(function (i) {
            var height = $('.balnrecent .equal-hgt').eq(i).height();
            if (height > maxHeight)
                maxHeight = height;
        });

        $('.balnrecent .equal-hgt').height(maxHeight);
    </script>
        <script>
        var maxHeight = 0;
        $('.request-withdrawal .equal-hgt').each(function (i) {
            var height = $('.request-withdrawal .equal-hgt').eq(i).height();
            if (height > maxHeight)
                maxHeight = height;
        });

        $('.request-withdrawal .equal-hgt').height(maxHeight);
    </script>
    
    

    <!--Ends Script for Auto Height -->

    <!-- Starts  Script for Active Menu -->
  <script type="text/javascript">
    $(document).ready(function () {
        $('#wallet_create').on('click', function () {
            swal({
                title: "Wallet Creation Confirmation",
                text: "Are you sure to create a Bitgo Wallet?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Confirm",
                cancelButtonText: "Cancel",
                closeOnConfirm: false,
                closeOnCancel: false,
                customClass: 'swal-wide'
            },
            function(isConfirm) {
                if (isConfirm) {
                    $.ajax({
                            type: "POST",
                            url: '/wallet-create',
                            success: function (response){
                                if(response.success == true){
                                    //swal("Success", "You have created a bitgo wallet successfully.", "success");
                                    swal({
                                        icon: "success",
                                        title: "Success",
                                        text: "You have created a bitgo wallet successfully.",
                                        confirmButtonClass: "btn-success",
                                        confirmButtonText: "OK"
                                    },function(isConfirm){
                                        if(isConfirm){
                                            window.location.href = "/wallets";
                                        }
                                    });
                                }    
                                                
                            }
                    });
                } else {
                    swal("Cancelled", "You cancelled bitgo wallet creation.", "error");
                }
            });            
                
        });


        $('.address_btn').on('click', function () {
            var currency_id = $(this).data('datac'); 
            swal({
                    title: "Address Creation Confirmation",
                    text: "Are you sure to create a Wallet Address?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Confirm",
                    cancelButtonText: "Cancel",
                    closeOnConfirm: false,
                    closeOnCancel: false,
                    customClass: 'swal-wide'
            },
            function(isConfirm) {
                if (isConfirm) {
                    $.ajax({
                            type: "POST",
                            url: '/generate-address',
                            data : {currency_id: currency_id},
                            success: function (response){
                                if(response.success == true){
                                    swal({
                                        icon: "success",
                                        title: "Success",
                                        text: "You have created a wallet address successfully.",
                                        confirmButtonClass: "btn-success",
                                        confirmButtonText: "OK"
                                    },function(isConfirm){
                                        if(isConfirm){
                                            window.location.href = "/wallets";
                                        }
                                    });
                                }    
                                                
                            }
                    });
                } else {
                    swal("Cancelled", "You cancelled wallet address creation.", "error");
                }
            });
        });
    });
  </script>

    <script type="text/javascript">
        $(function(){

            var url = window.location.href.substr(window.location.href.lastIndexOf("/")+1), // in real app this would have to be replaced with window.location.pathname 
                urlRegExp = new RegExp(url.replace(/\/$/,'')); // create regexp to match current url pathname and remove trailing slash if present as it could collide with the link in navigation in case trailing slash wasn't present there
            
                // now grab every link from the navigation
                $('.sidebar-menu a').each(function(){
                    // and test its href against the url pathname regexp
                    if(urlRegExp.test(this.href)){
                        $(this).addClass('active');
                    }
                });
        });
    </script>
     <!-- Ends Script for Active Menu -->

     <script>
         $(document).ready(function () {
            $( "#amount_deposit" ).click(function() {
                    $( "#depositerrormsg" ).empty();
                    $( "#depositerrormsg" ).hide();
                });

                $('#amount_deposit').on('keyup', function(event) {
                    $(this).val($(this).val().replace(/[^0-9\.]/g,''));
                    if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
                        event.preventDefault();
                        $( "#depositerrormsg" ).html('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Please enter a valid number</p>');
                        $('#depositerrormsg').show();
                    } else {
                        $('#depositerrormsg').hide();
                        $('#depositerrormsg').html('');
                    }
                });

                $( "#amt_deposit_btn" ).click(function() {
                    var amountdeposit = $( "#amount_deposit" ).val();	
                    $( "#depositerrormsg" ).show();
                    $( "#depositerrormsg" ).empty();
                    if (amountdeposit <= 0) {
                        $( "#depositerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Amount should be greater than 0</p>');
                        return false;
                    } else {
                        $.ajax({
                            type: "POST",
                            url: '/deposit-currency',
                            data : {coin_amount: amountdeposit},
                            beforeSend: function() {
                                $(".loader-gif").css('display', 'block');
                            },
                            success: function (response){
                                $(".loader-gif").css('display', 'none');
                                if(response.success == "0" || response.success == "2"){
                                    $( "#depositerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">' + response.message + '</p>');
                                    $( "#depositerrormsg" ).show();
                                }
                                if(response.success == "1"){
                                    swal({
                                        icon: "success",
                                        title: "Success",
                                        text: response.message,
                                        confirmButtonClass: "btn-success",
                                        confirmButtonText: "OK"
                                    },function(isConfirm){
                                        if(isConfirm){
                                            window.location.href = "/wallets";
                                        }
                                    });
                                }
                            }
                    });
                    }
                });

                $('#investsuccessmsg').delay(2000).fadeOut();
            });    
     </script>
     <script>
         $(document).ready(function() {
              // SLIMSCROLL FOR CHAT WIDGET
              //var sidebarHeight = $(".sidebar .sidebar-menu ul").height();
            $('.sidebar .sidebar-menu').slimScroll({
                //height: sidebarHeight + "px"
                height: "400",
                alwaysVisible: true
            });


         });
     </script>

    {{!-- Wallet Send Coins starts --}}
     <script>
         $(document).ready(function () {
            $( "#coin_amount" ).click(function() {
                    $( "#coinsenderrormsg" ).empty();
                    $( "#coinsenderrormsg" ).hide();
                });

                $('#coin_amount').on('keyup', function(event) {
                    $(this).val($(this).val().replace(/[^0-9\.]/g,''));
                    if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
                        event.preventDefault();
                        $( "#coinsenderrormsg" ).html('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Please enter a valid number</p>');
                        $('#coinsenderrormsg').show();
                    } else {
                        $('#coinsenderrormsg').hide();
                        $('#coinsenderrormsg').html('');
                    }
                });

                $( "#coin-send-btn" ).click(function(event) {
                    //event.preventDefault();
                    var coin_address = $( "#coin_address" ).val();	
                    var coin_amount = $( "#coin_amount" ).val();	
                    $( "#coinsenderrormsg" ).show();
                    $( "#coinsenderrormsg" ).empty();
                    if (coin_amount <= 0) {
                        $( "#coinsenderrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Amount should be greater than 0</p>');
                        return false;
                    } else if(coin_address == "") {
                        $( "#coinsenderrormsg" ).empty();
                        $( "#coinsenderrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Please enter an address to send bitcoin</p>');
                        return false;
                    } else {
                        $.ajax({
                            type: "POST",
                            url: '/send-currency',
                            data : {coin_address: coin_address, coin_amount: coin_amount},
                            beforeSend: function() {
                                $(".loader-gif").css('display', 'block');
                            },
                            success: function (response){
                                $(".loader-gif").css('display', 'none');
                                if(response.success == "0" || response.success == "2" || response.success == "3"){
                                    $( "#coinsenderrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">' + response.message + '</p>');
                                    $( "#coinsenderrormsg" ).show();
                                }
                                if(response.success == "1"){
                                    swal({
                                        icon: "success",
                                        title: "Success",
                                        text: response.message,
                                        confirmButtonClass: "btn-success",
                                        confirmButtonText: "OK"
                                    },function(isConfirm){
                                        if(isConfirm){
                                            window.location.href = "/wallets";
                                        }
                                    });
                                }
                            }
                    });
                    }
                });

            });    
     </script>
     {{!-- Wallet Send Coins ends --}}


</body>
</html>