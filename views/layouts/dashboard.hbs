<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>Coinjolt | Dashboard</title>
  <!-- Favicon-->
  <link rel="shortcut icon" href="/dist/img/favicon.ico" type="image/x-icon">
  <link rel="icon" href="/dist/img/favicon.ico" type="image/x-icon">
  <!-- Tell the browser to be responsive to screen width -->
  <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
  <!-- Icons Style -->
  <link rel="stylesheet" href="/dist/css/icon.css">
  <!-- Style -->
  <link rel="stylesheet" href="/dist/css/style.css">
  <!-- Bootstrap 3.3.7 -->
  <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="/bower_components/font-awesome/css/font-awesome.min.css">
  <!-- Ionicons -->
  <link rel="stylesheet" href="/bower_components/Ionicons/css/ionicons.min.css">
  <!-- Theme style -->
  <link rel="stylesheet" href="/dist/css/AdminLTE.min.css">
  <!-- AdminLTE Skins. Choose a skin from the css/skins
   folder instead of downloading all of them to reduce the load. -->
  <link rel="stylesheet" href="/dist/css/skins/_all-skins.min.css">
  <!-- Morris chart -->
  <link rel="stylesheet" href="/bower_components/morris.js/morris.css">
  <!-- jvectormap -->
  <link rel="stylesheet" href="/bower_components/jvectormap/jquery-jvectormap.css">
  <!-- Date Picker -->
  <link rel="stylesheet" href="/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
  <!-- Daterange picker -->
  <link rel="stylesheet" href="/bower_components/bootstrap-daterangepicker/daterangepicker.css">
  <!-- bootstrap wysihtml5 - text editor -->
  <link rel="stylesheet" href="/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.min.css">
  <!-- DataTables -->
  <link rel="stylesheet" href="/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">
  <!-- Sweet alert -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css">

  <!-- Style -->
  <link rel="stylesheet" href="/dist/css/custom.css">
  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
  <!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->

  <!-- Google Font -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

</head>

<body class="hold-transition skin-blue sidebar-mini">
  <div class="wrapper">

    <!-- begin #header -->
    {{> header}}
    <!-- end #header -->

    <!-- begin #sidebar -->
    {{> sidebar}}
    <!-- end #sidebar -->

    <div class="content-wrapper">
      <!-- begin #content -->
      {{{body}}}
      <!-- end #content -->



    </div>

    {{> footer}}

    <div class="control-sidebar-bg"></div>
    <!-- Referral modal starts -->
    <div class="modal fade in" id="referralModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="padding-right: 15px;">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">Ã—</span>
            </button>
            <h4 class="modal-title" id="myModalLabel">Referral Link</h4>
          </div>
          <div class="modal-body">
            <p>

              Your link has been successfully copied to clipboard! Earn 2% for every deposit made by your friends for life. Here is your
              referral link for reference:
              <a href="" style="color: #4165b4;" target="_blank">https://coinjolt.com?user={{reffer_link_id}}</a>

            </p>
            <p>For more information about our referral program,
              <a style="color: #4165b4;" href="invite-friends">click here.</a>
            </p>
            <div class="row">
              <div class="col-md-4">
                <button type="button" class="btn btn-default change-referral-name" id="changereferralBtn">Change Referral ID</button>
              </div>
            </div>
            <div class="row" id="changeReferralFrm" style="display:none;">
              <div class="change-rf">
                <p class="referralname_err" style="color: red; background-color: rgb(242, 222, 222); border-color: rgb(235, 204, 209); padding: 9px; font-size: 15px; margin-bottom: 16px;display:none;"></p>
                <form method="post" class="change-rf-form" action="/save-referral-name" name="referralNameFrm">
                  <div class="col-md-5">
                    <div class="refer-id">
                      https://coinjolt.com?user=

                    </div>
                  </div>

                  <div class="col-md-4">
                    <input type="text" name="referral_name" class="form-control" id="referral_name" value="{{reffer_link_id}}" placeholder="ie://username"
                      required="required">

                  </div>
                  <div class="col-md-3">
                    <input type="submit" id="referral_name_save" name="referral_name_save" value="Save" class="form-control btn btn-default">
                  </div>
                  <input type="text" name="referral_link_text" id="referral_link_text" value="" style="display:none;">
                </form>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
      <!-- Referral modal ends -->
    </div>
    <!-- ./wrapper -->

    <!-- jQuery 3 -->
    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="/bower_components/jquery-ui/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/additional-methods.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>
      $.widget.bridge('uibutton', $.ui.button);
    </script>
    <!-- Bootstrap 3.3.7 -->
    <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- Morris.js charts -->
    <script src="/bower_components/raphael/raphael.min.js"></script>
    <script src="/bower_components/morris.js/morris.min.js"></script>
    <!-- Sparkline -->
    <script src="/bower_components/jquery-sparkline/dist/jquery.sparkline.min.js"></script>
    <!-- jvectormap -->
    <script src="/plugins/jvectormap/jquery-jvectormap-1.2.2.min.js"></script>
    <script src="/plugins/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="/bower_components/jquery-knob/dist/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="/bower_components/moment/min/moment.min.js"></script>
    <script src="/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
    <!-- datepicker -->
    <script src="/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <!-- Bootstrap WYSIHTML5 -->
    <script src="/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.all.min.js"></script>
    <!-- Slimscroll -->
    <script src="/bower_components/jquery-slimscroll/jquery.slimscroll.min.js"></script>
    <!-- FastClick -->
    <script src="/bower_components/fastclick/lib/fastclick.js"></script>
    <!-- AdminLTE App -->
    <script src="/dist/js/adminlte.min.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="/dist/js/pages/dashboard.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="/dist/js/demo.js"></script>
    <!-- DataTables -->
    <script src="/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <!-- jquery masked input -->
    <script src="/dist/js/jquery.maskedinput.js"></script>
    <!-- jquery sweet alert -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
    <!-- Chart.js -->
    <script src="/bower_components/chart.js/Chart.js"></script>
    
    <!--for deposite funds//-->
    <script src="/js/deposite_funds.js"></script>
    <!--end-->
    
    <script>
      $(function () {
        $('#example2').DataTable({
          'paging': true,
          'lengthChange': false,
          'searching': false,
          'ordering': true,
          'info': true,
          'autoWidth': false
        });
        $('#support-list').DataTable();
        $('#my_referrals').DataTable();
        $('#example3').DataTable();
        $('#example4').DataTable();
        $('#example5').DataTable();
        $('#example6').DataTable();
        $('#example7').DataTable();
      });
    </script>
    <script>
      $(document).ready(function () {
        $('#currentratetext').removeClass('alert alert-danger');
        $('#calculatedamount').removeClass('alert alert-success');
        $('#sell_currentratetext').removeClass('alert alert-danger');
        $('#sell_calculatedamount').removeClass('alert alert-success');

        $('.expected').removeClass('alert alert-danger');
        $("#changereferralBtn").click(function(){
          $("#changeReferralFrm").slideToggle('slow');
        });
        // Account settings validation
        $("#update_profile").validate({
        rules: {
          user_name: {
            required: true
          },
          first_name: {
            required: true
          },
          last_name: {
            required: true
          },
          address: {
            required: true
          },
          contact_no: {
            required: true,
            number: true,
            maxlength:10,
            minlength:10
          },
          dob: {
            required: true
          },
          city: {
            required: true
          },
          state: {
            required: true
          },
          country: {
            required: true
          },
          postcode: {
            required: true
          },
          async_upload: {
            extension: 'jpg|JPG|jpeg|JPEG|png|PNG|tiff|TIFF'
          }
        },
        messages: {
          user_name: {
            required: "Please enter your nick name"
          },
          first_name: {
            required: "PLease enter your first name"
          },
          last_name: {
            required: "Please enter your last name"
          },
          address: {
            required: "Please enter street address"
          },
          contact_no: {
            required: "Please enter contact no",
            number: "It must be number",
            maxlength:"Must be 10 digits",
            minlength:"Must be 10 digits"
          },
          dob: {
            required: "Please enter date of birth"
          },
          city: {
            required: "Please enter city"
          },
          state: {
            required: "Please enter state"
          },
          country: {
            required: "Please enter country"
          },
          postcode: {
            required: "Please enter postal code"
          },
          async_upload: {
            extension: 'Must be image type'
          }
        }
      });

        // Script for Change password
        $("#changepassword").click(function(e) {
          $("#frmUpdatePassword").submit();
        });
        $("#frmUpdatePassword").validate({
        rules: {
          oldpassword: {
            required: true
          },
          newpassword: {
            required: true
          },
          confirmpassword: {
            required: true,
            equalTo: "#newpassword"
          }
        },
        messages: {
          oldpassword: {
            required: "Please enter old password"
          },
          newpassword: {
            required: "Please enter new password"
          },
          confirmpassword: {
            required: "Please enter confirm password",
            equalTo: "new password and confirm password must be same"
          }
        },
        submitHandler:function(form) {
          $.ajax({
            type: "POST",
            url: "/update-password",
            data: {
              oldpassword: $("#oldpassword").val(),
              newpassword: $("#newpassword").val()
            },
            beforeSend: function() {
              $(".loader-gif").show();
            },
            success:function(response) {
              $(".loader-gif").hide();
              $(".errorPass").show();
              if(response.success === true) {
                $(".errorPass").removeClass('error').addClass('success');
              }
              else {
                $(".errorPass").removeClass('success').addClass('error');
              }
              $(".errorPass").html(response.message);

            },
            error: function(xhr) {
              $(".loader-gif").hide();
            }
          });
        }
      });

        $("#async_upload").change(function(e){
        var input = this;
        var exts = ['jpg','jpeg','png','tiff'];
        if (input.files && input.files[0]) {

          var get_ext = input.files[0].name.split('.');

          get_ext = get_ext.reverse();

          if ( $.inArray ( get_ext[0].toLowerCase(), exts ) > -1 ){
            var reader = new FileReader();
            reader.onload = function (e) {
              $('.preview_image, .user-image, .img-circle').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);

          } else {
            alert( 'Invalid file!' );
          }
        }
      });

        // Script for uploading id proof
        $("#frmIDChange").validate({
        rules: {
          async_uploads: {
            required: true,
            extension: 'jpg|JPG|jpeg|JPEG|png|PNG|tiff|TIFF'
          }
        },
        messages: {
          async_uploads: {
            required: "Please upload id proof",
            extension: 'Must be image file'
          }
        },
        submitHandler:function(form) {
          var formData = new FormData($('#frmIDChange')[0]);
          $.ajax({
            type: 'POST',
            url: '/update-id-proof',
            data: formData,
            processData: false,
            contentType: false,
            beforeSend:function() {
              $("#loaderimg").show();
            },
            success: function ( response ) {
              $("#loaderimg").hide();
              $(".errorIDProof").show();
              if(response.success === true) {
                $(".errorIDProof").removeClass('error').addClass('success');
                $("#id-proof-view").attr('href', '/id-proof/'+response.file_name);
                window.location.href = "/account-settings";
              }
              else {
                $(".errorIDProof").removeClass('success').addClass('error');
              }
              $(".errorIDProof").html(response.message);
            }
          });

        }
      });

        // Script for saving referral names
        $('#referral_name_save').on('click', function(e){
          e.preventDefault();
          var errors = '';
          var referral_name = $('#referral_name').val();
          if(referral_name == ''){
            errors += "Referral name can not be left empty<br/>";
          }
          if(errors !=''){
            $('.referralname_err').html(errors);
            $('.referralname_err').show();
          }
          else{
            $('.referralname_err').html('');
            $('.referralname_err').hide();
            $.ajax({
              type: 'POST',
              data: {referral_name: referral_name},
              url: "/save-referral-name", 
              dataType: "json",
              beforeSend: function(){
                $('#referral_name_save').prop('disabled', true);
                $("#referral_name_save").attr('value', 'Please wait');
              },
              success: function(result){
                if(result.message !='' && result.status === 'true'){
                  $('#referral_name_save').prop('disabled', false);

                  swal({
                    title: "Success",
                    text: result.message,
                    type: "success",
                    showConfirmButton: true
                  },
                  function(isConfirm){
                    if (isConfirm) {
                      window.location.href = "/dashboard";
                    }
                  });

                  $('#referral_name_save').prop('disabled', false);
                  $("#referral_name_save").attr('value', 'Save');
                  $('#referralModal').modal('hide');
                } 
                else{
                  $('#referral_name_save').prop('disabled', false);
                  $("#referral_name_save").attr('value', 'Save');
                  $('.referralname_err').html(result.message);
                  $('.referralname_err').show();
                }
              },
              error: function(error){
                console.log(error);
              }
            });
          }

        });

        // Script for showing current currency type purchase type selection
        $('#currency_purchased').on('change', function () {
          var currencyType =  $("#currency_purchased option:selected").text();
          var msg = "Current Rate("+currencyType+")"+": "+"$ ";
          var amtVal = parseFloat(jQuery("#payAmount").val());
          if(currencyType !== ''){
              $('.expected').removeClass('alert alert-danger');
              $('.expected').html('');
              $('.expected').hide();
              $.ajax({
                type: 'GET',
                url: "https://coincap.io/page/"+currencyType, 
                dataType: "json",
                success: function(result){
                  $('#coinRate').val(result.price_usd);
                  var roundUpPrice = parseFloat(Math.round(result.price_usd * 100) / 100).toFixed(2);
                  $('.currentrateexpected').html(msg+roundUpPrice);
                  $('#currentratetext').addClass('alert alert-danger');
                  $('#currentratetext').show();
                  $('#currentratetext').html('Current Rate('+currencyType+')'+': $'+result.price_usd);
                
                  $('.currentrateexpected').show();
                },
                error: function(error){
                  console.log(error);
                }
              });
          }
          
        });

        // Script for validating amount field in buy coins
        $('#payAmount').on('keyup', function(event) {

         $(this).val($(this).val().replace(/[^0-9\.]/g,''));
         if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
          event.preventDefault();
          $('.expected').addClass('alert alert-danger');
          $('.expected').html('Please enter a valid number');
          $('.expected').show();
          $('#calculatedamount').html('');
          $('#calculatedamount').hide();
        }

         var amtVal = parseFloat(jQuery("#payAmount").val());
          var coinRate = parseFloat(jQuery('#coinRate').val());
          var selectopton = jQuery("#currency_purchased").val();
          var currency_purchased = jQuery("#currency_purchased").val();
          
          var currencyType =  $("#currency_purchased option:selected").val();

          var currentUsdBal = {{user.currentUsdBalance}};

          var errmsg = "Amount exceeds current balance of "+currentUsdBal+" USD, <a href='/deposit-funds'>click here to deposit funds.</a>";

        
        if(parseFloat(amtVal) > parseFloat(currentUsdBal)){
          $('.expected').addClass('alert alert-danger');
          $('.expected').html(errmsg);
          $('.expected').show();
          $('#calculatedamount').html('');  
          $('#calculatedamount').css('display','none');
          $("#cc-submit").prop('disabled', true);
        }



        else if(!jQuery.isNumeric(jQuery("#payAmount").val())){
          $('.expected').addClass('alert alert-danger');
          $('.expected').html('Please enter a valid number.');
          $('.expected').show();
          $("#cc-submit").prop('disabled', true);
        }


        else if(amtVal < 1){
          $('.expected').addClass('alert alert-danger');
          $('.expected').html('Amount should be atleast $1');
          $('.expected').show();
          $("#cc-submit").prop('disabled', true);
        }
        else{
          
          if(currencyType === ''){
            $('#calculatedamount').html('');
            $('#calculatedamount').removeClass('alert alert-success');
            $('#calculatedamount').hide();

            var amtExpect = parseFloat(amtVal/coinRate);
            if(isNaN(amtExpect)){
              $('#calculatedamount').html('');
              $('#calculatedamount').removeClass('alert alert-success');
              $('#calculatedamount').css('display','none');
            }
          }

          else{
              var amtExpect = parseFloat(amtVal/coinRate);
              $("#converted_amount").val(amtExpect);
              $('#currentratetext').addClass('alert alert-danger');
              $('#calculatedamount').addClass('alert alert-success');

              jQuery('#calculatedamount').show();
              jQuery('#calculatedamount').html('Calculated Amount('+currencyType+')'+': '+ parseFloat(amtVal/coinRate) );
              jQuery("#cc-submit").prop('disabled', false);

              $('.expected').removeClass('alert alert-danger');
              $('.expected').html('');
              $('.expected').hide();
          }

        }
      });

      //Script for handling submission of buy request of coin
      $('#cc-submit').on('click', function(e){
        e.preventDefault();
        var amount = $('#payAmount').val();
        var currencyBuyType = $('#currency_purchased').val();
        if(amount === ''){
          $('.expected').addClass('alert alert-danger');
          $('.expected').html('Please enter amount');
          $('.expected').show();
        }
        if(currencyBuyType === ''){
          $('.expected').addClass('alert alert-danger');
          $('.expected').html('Please choose a currency to buy');
          $('.expected').show();

          $('#currentratetext').html('');
          $('#currentratetext').removeClass('alert alert-danger');
          $('#currentratetext').hide();

          $('#calculatedamount').html('');
          $('#calculatedamount').removeClass('alert alert-success');
          $('#calculatedamount').hide();
        }
          if(amount !== '' && currencyBuyType !== ''){
            var amtVal = jQuery("#payAmount").val();
            var coinRate = jQuery("#coinRate").val();
            var actualAmtExpect = parseFloat(amtVal/coinRate);
            var currency_purchased = jQuery("#currency_purchased").val();
            var user_id = {{user.id}};
            var currency_name = jQuery( "#currency_purchased option:selected" ).text();
            var currency_value = jQuery("#currency_purchased option:selected").val();
            var totalAmtExpect = 0;
            var currentUsdBalance = {{user.currentUsdBalance}};
            currentUsdBalance = parseFloat(Math.round(currentUsdBalance * 100) / 100).toFixed(2);
            var finalusdBalance = parseFloat(currentUsdBalance - amtVal);

            $('.expected').removeClass('alert alert-danger');
            $('.expected').html('');
            $('.expected').hide();
    
             $.ajax({
              type: 'POST',
              data: {amtVal: amtVal,coinRate: coinRate,currencyBuyType: currencyBuyType},
              url: "/buy-coin", 
              dataType: "json",
              success: function(result){
                if(result.message !=='' && result.status === true){ 
                  var t_amt = parseFloat(result.crypto_balance)+parseFloat(actualAmtExpect);
                  swal({
                    title: "Transaction Confirmation",
                    text: "You are buying " + actualAmtExpect + " " + currency_name + " at the current market rate of " + Number(coinRate).toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "\n\nUSD  Wallet:\nCurrent balance:$" +currentUsdBalance+"\nFinal balance:$"+finalusdBalance+"\n\n" + currency_name + "("+currency_value+ ")" + " Wallet:\n Current balance: " +result.crypto_balance+"\n Final balance: " +t_amt+ "\n\nTransaction fee (0%): You will be charged a total amount of $0.00 to complete this transaction.",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Confirm",
                    cancelButtonText: "Cancel",
                    closeOnConfirm: false,
                    closeOnCancel: false,
                    customClass: 'swal-wide'
                  },
                  function(isConfirm) {
                    if (isConfirm) {
                      swal({
                            title: "Transaction successful",
                            text: "USD Wallet: " + Number(finalusdBalance).toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "\n" + currency_name + " Wallet: Balance: "+t_amt,
                            type: "success"
                        },
                      function(isConfirm) {
                        if (isConfirm) {
                            buyFormSubmit(amtVal, currency_purchased, coinRate, actualAmtExpect);  
                        }
                      });

                    } else {
                      swal("Cancelled", "You cancelled this transaction.", "error");
                    }
                  });
              } 
            },
              error: function(error){
                console.log(error);
              }
            });
        }
      });

      function buyFormSubmit(amtVal, currency_purchased, coinRate, actualAmtExpect){
            $.ajax({
                type: 'POST',
                url : "/confirm_coin_buy",
                data : {amtVal: amtVal,currency_purchased: currency_purchased,coinRate: coinRate,actualAmtExpect:actualAmtExpect},
                success:function(response) {
                  if(response.success == true){
                      window.location.href="/buy-and-sell-coins";
                  }
              },
              error:function(xhr) {
                console.log(xhr);
              }
            });
      }

      // Script for getting current coin rate for selling coin
      $('#currency_sold').on('change', function () {
          var currencyType =  $("#currency_sold option:selected").text();
          var msg = "Current Rate("+currencyType+")"+": "+"$ ";
          var amtVal = parseFloat(jQuery("#payAmount").val());
          if(currencyType !== ''){
              $('.expected').removeClass('alert alert-danger');
              $('.expected').html('');
              $('.expected').hide();
              $.ajax({
                type: 'GET',
                url: "https://coincap.io/page/"+currencyType, 
                dataType: "json",
                success: function(result){
                  $('#sell_coinRate').val(result.price_usd);
                  var roundUpPrice = parseFloat(Math.round(result.price_usd * 100) / 100).toFixed(2);
                  $('.currentrateexpected').html(msg+roundUpPrice);
                  $('#sell_currentratetext').addClass('alert alert-danger');
                  $('#sell_currentratetext').show();
                  $('#sell_currentratetext').html('Current Rate('+currencyType+')'+': $'+roundUpPrice);
                  $('.currentrateexpected').show();
                },
                error: function(error){
                  console.log(error);
                }
              });
          }
        });

        // Script for validating amount field in sell coins
      $('#sellAmount').on('keyup', function(event) {
         $(this).val($(this).val().replace(/[^0-9\.]/g,''));
         if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
          event.preventDefault();
          $('.sell_expected').addClass('alert alert-danger');
          $('.sell_expected').html('Please enter a valid number.');
          $('.sell_expected').show();
          $('#sell_calculatedamount').html('');
          $('#sell_calculatedamount').hide();
        }

        var amtVal = parseFloat(jQuery("#sellAmount").val());
        var coinRate = parseFloat(jQuery('#sell_coinRate').val());
        var selectopton = jQuery("#currency_sold").val();
        var currency_sold = jQuery("#currency_sold").val();
        var currencySellType = jQuery("#currency_sold option:selected").val();
        

        var cryptocurrency_bal = 0;
        var astatus = 0;

        if(!jQuery.isNumeric(jQuery("#sellAmount").val())){
          $('.sell_expected').addClass('alert alert-danger');
          $('.sell_expected').html('Please enter a valid number.');
          $('.sell_expected').show();
        }
        else if(amtVal === 0){
          $('.sell_expected').addClass('alert alert-danger');
          $('.sell_expected').html('Currency amount should be more than 0');
          $('.sell_expected').show();
        }

        else if(currencySellType === ''){
          $('#sell_calculatedamount').html('');
          $('#sell_calculatedamount').removeClass('alert alert-success');
          $('#sell_calculatedamount').hide();

        }
        else{
          var amtExpect = parseFloat(amtVal*coinRate);
          var calcultedSellAmount = parseFloat(Math.round(amtExpect * 100) / 100).toFixed(2);
          var currencyType =  $("#currency_sold option:selected").val();
          if(isNaN(amtExpect)){
            $('#sell_calculatedamount').html('');
            $('#sell_calculatedamount').removeClass('alert alert-success');
            $('#sell_calculatedamount').hide();
          }
          $('#sell_converted_amount').val(amtExpect);
          $('#sell_currentratetext').addClass('alert alert-danger');
          $('#sell_calculatedamount').addClass('alert alert-success');
          $('#sell_calculatedamount').show();
          $('#sell_calculatedamount').html('Calculated Amount('+currencyType+')'+': $'+ parseFloat(calcultedSellAmount) );
          
          $('.sell_expected').removeClass('alert alert-danger');
          $('.sell_expected').html('');
          $('.sell_expected').hide();
          $('#cc-submit1').prop('disabled', false);
          
          // ajax block
            if(jQuery("#sellAmount").val() !== ''){
              $.ajax({
                  type: 'POST',
                  data: {amtVal: amtVal,coinRate: coinRate,currencySellType: currencySellType},
                  url: "/sell-coin", 
                  dataType: "json",
                  success: function(result){
                    if(result.message !=='' && result.status === true){ 
                      cryptocurrency_bal = result.crypto_balance;
                     
                      if(amtVal > cryptocurrency_bal){
                        $('.sell_expected').addClass('alert alert-danger');
                        $('.sell_expected').html('Amount exceeds currency balance.');
                        $('.sell_expected').show();
                        $('#sell_calculatedamount').html('');  
                        $('#sell_calculatedamount').css('display','none');
                        $('#cc-submit1').prop('disabled', true);
                        astatus = 1;
                      }  
                      else{
                        $('#cc-submit1').prop('disabled', false);
                      }
                  } 
                },
                error: function(error){
                  console.log(error);
                }
              });
              if(astatus === '1'){
                if(!jQuery.isNumeric(jQuery("#sellAmount").val())){
                    $('.sell_expected').addClass('alert alert-danger');
                    $('.sell_expected').html('Please enter a valid number.');
                    $('.sell_expected').show();
                    $('#cc-submit1').prop('disabled', true);
                }   
                else if(amtVal === '0'){
                    $('.sell_expected').addClass('alert alert-danger');
                    $('.sell_expected').html('Currency amount should be more than 0');
                    $('.sell_expected').show();
                    $('#cc-submit1').prop('disabled', true);
                }
                else{
                    if(currency_sold === ''){      
                        $('#sell_calculatedamount').html('');
                        $('#sell_calculatedamount').removeClass('');
                        $('#sell_calculatedamount').css('display','none');

                      var amtExpect = parseFloat(amtVal*coinRate);
                      if(isNaN(amtExpect)){
                        $('#sell_calculatedamount').html('');
                        $('#sell_calculatedamount').removeClass('');
                        $('#sell_calculatedamount').css('display','none');
                      }
                    }
                    else{
                        var amtExpect = parseFloat(amtVal*coinRate);
                        var calcultedSellAmount = parseFloat(Math.round(amtExpect * 100) / 100).toFixed(2);
                        var currencyType =  $("#currency_sold option:selected").val();
                        $("#sell_converted_amount").val(amtExpect);
                        $('#sell_currentratetext').addClass('alert alert-danger');
                        $('#sell_calculatedamount').addClass('alert alert-success');
                        jQuery('#sell_calculatedamount').show();
                        jQuery('#sell_calculatedamount').html('Calculated Amount('+currencyType+')'+': $'+ parseFloat(calcultedSellAmount) );
                        $('.sell_expected').removeClass('alert alert-danger');
                        $('.sell_expected').html('');
                        $('.sell_expected').hide();
                        $('#cc-submit1').prop('disabled', false);
                    }
                }
              }
        }
            // end ajax block


        }

            
        

        // end refining of block
      });

      // Script for handling submission of sell request of coin
      $('#cc-submit1').on('click', function(e){
          e.preventDefault();
          var amount = $('#sellAmount').val();
          var currencySellType = $('#currency_sold').val();
          if(amount === ''){
            $('.sell_expected').addClass('alert alert-danger');
            $('.sell_expected').html('Please enter amount');
            $('.sell_expected').show();
          }
          else if(currencySellType === ''){
            $('.sell_expected').addClass('alert alert-danger');
            $('.sell_expected').html('Please choose a currency to sell');
            $('.sell_expected').show();

            // added later
            $('#sell_currentratetext').html('');
            $('#sell_currentratetext').removeClass('alert alert-danger');
            $('#sell_currentratetext').hide();

            $('#sell_calculatedamount').html('');
            $('#sell_calculatedamount').removeClass('alert alert-success');
            $('#sell_calculatedamount').hide();
            // end

          }
          
          else{
              var amtVal = jQuery("#sellAmount").val();
              var coinRate = jQuery("#sell_coinRate").val();
              var actualAmtExpect = parseFloat(amtVal/coinRate);
              var currency_sold = jQuery("#currency_sold").val();
              var user_id = {{user.id}};
              var currency_name = jQuery( "#currency_sold option:selected" ).text();
              var currency_value = jQuery("#currency_sold option:selected").val();
              var totalAmtExpect = 0;
              var currentUsdBalance = {{user.currentUsdBalance}};
              currentUsdBalance = parseFloat(Math.round(currentUsdBalance * 100) / 100).toFixed(2);
              
              var finalusdBalance = amtVal * Number(coinRate);
              
              finalusdBalance = parseFloat(finalusdBalance) + parseFloat(currentUsdBalance);
              finalusdBalance = parseFloat(Math.round(finalusdBalance * 100) / 100).toFixed(2);
              $('.sell_expected').removeClass('alert alert-danger');
              $('.sell_expected').html('');
              $('.sell_expected').hide();
      
              $.ajax({
                type: 'POST',
                data: {amtVal: amtVal,coinRate: coinRate,currencySellType: currencySellType},
                url: "/sell-coin", 
                dataType: "json",
                success: function(result){
                  if(result.message !=='' && result.status === true){ 
                    totalAmtExpect = parseFloat(result.crypto_balance+actualAmtExpect);
                    var t_amt = parseFloat(result.crypto_balance)-parseFloat(amtVal);
                    swal({
                      title: "Transaction Confirmation",
                      text: "You are selling " + amtVal + " " + currency_name + " at the current market rate of " + Number(coinRate).toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "\n\nUSD  Wallet:\nCurrent balance:$" +currentUsdBalance+"\nFinal balance:$"+finalusdBalance+"\n\n" + currency_name + "("+currency_value+ ")" + " Wallet:\n Current balance: " +result.crypto_balance+"\n Final balance: " +t_amt+ "\n\nTransaction fee (0%): You will be charged a total amount of $0.00 to complete this transaction.",
                      type: "warning",
                      showCancelButton: true,
                      confirmButtonClass: "btn-danger",
                      confirmButtonText: "Confirm",
                      cancelButtonText: "Cancel",
                      closeOnConfirm: false,
                      closeOnCancel: false,
                      customClass: 'swal-wide'
                    },
                    function(isConfirm) {
                      if (isConfirm) {
                        swal({
                              title: "Transaction successful",
                              text: "USD Wallet: " + Number(finalusdBalance).toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "\n" + currency_name + " Wallet: Balance: "+t_amt,
                              type: "success"
                          },
                        function(isConfirm) {
                          if (isConfirm) {
                               coinRate = parseFloat(Math.round(coinRate * 100) / 100).toFixed(2);
                               sellFormSubmit(finalusdBalance, coinRate, amtVal, currencySellType);  
                          }
                        });

                      } else {
                        swal("Cancelled", "You cancelled this transaction.", "error");
                      }
                    });
                } 
              },
                error: function(error){
                  console.log(error);
                }
              });
          }
      });

      function sellFormSubmit(finalusdBalance, coinRate, amtVal, currencySellType){
            $.ajax({
                type: 'POST',
                url : "/confirm_coin_sell",
                data : {finalusdBalance: finalusdBalance,coinRate: coinRate,amtVal: amtVal,currencySellType:currencySellType},
                success:function(response) {
                  if(response.success == true){
                      window.location.href="/buy-and-sell-coins";
                  }
              },
              error:function(xhr) {
                console.log(xhr);
              }
            });
      }

      jQuery( "#amount_invest" ).click(function() {
            jQuery( "#investerrormsg" ).empty();
            jQuery( "#investerrormsg" ).hide();							
			});

      $('#amount_invest').on('keyup', function(event) {
        $(this).val($(this).val().replace(/[^0-9\.]/g,''));
        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
            event.preventDefault();
              jQuery( "#investerrormsg" ).html('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Please enter a valid number</p>');
            $('#investerrormsg').show();
        }
        else{
          $('#investerrormsg').hide();
          $('#investerrormsg').html('');
        }
      });

      jQuery( "#amt_invest_btn" ).click(function() {
        var amountinvest =  jQuery( "#amount_invest" ).val();	
        var useramountUSD =  jQuery( "#useramountUSD" ).val();	
        jQuery( "#investerrormsg" ).show();
        jQuery( "#investerrormsg" ).empty();
        if(useramountUSD >=10000){
          if(amountinvest >=10000){
            return true;
          }else{
            jQuery( "#investerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Amount should be equal or greater than $10,000</p>');
            return false; 

          }

        }else{								
          jQuery( "#investerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Your USD account balance is too low i.e. ($'+useramountUSD+'). The minimum investment amount should be equal or greater then $10,000.</p>');
          return false;
        }

			});

      jQuery("#amount_withdraw").on('click', function(){
          jQuery( "#withdrawerrormsg" ).empty();
          jQuery( "#withdrawerrormsg" ).hide();							
      });

      $('#amount_withdraw').on('keyup', function(event) {
        $(this).val($(this).val().replace(/[^0-9\.]/g,''));
        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) || (event.keyCode < 96 && event.keyCode > 105)) {
            event.preventDefault();
              jQuery( "#withdrawerrormsg" ).html('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Please enter a valid number</p>');
            $('#withdrawerrormsg').show();
        }
        else{
          $('#withdrawerrormsg').hide();
          $('#withdrawerrormsg').html('');
        }
      });

      jQuery( "#amt_withd_btn" ).click(function() {
        var amountwithdraw =  jQuery( "#amount_withdraw" ).val();	
        var useramountUSD =  jQuery( "#useramountUSD" ).val();	
        jQuery( "#withdrawerrormsg" ).show();
        jQuery( "#withdrawerrormsg" ).empty();
        if(useramountUSD >=10000){
          if(amountwithdraw >=1000){
            return true;
          }else{
            jQuery( "#withdrawerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Amount should be equal or greater than $1000</p>');
            return false; 
          }
        }else{								
          jQuery( "#withdrawerrormsg" ).append('<p style="color: #a94442; background-color: #f2dede;border-color: #ebccd1; padding: 6px 10px; margin-top: 11px;">Your USD account balance is too low i.e. ($'+useramountUSD+'). The minimum withdraw amount should be equal or greater then $1000.</p>');
          return false;
        }
			});

        // Dashboard display cryptocurrency list in table starts
        $tr = "";
        $.ajax({
          type: "GET",
          crossDomain: true,
          dataType: 'json',
          url: "https://api.coinmarketcap.com/v1/ticker/",
          success: function (resp) {
            $(resp).each(function (i) {
              if (resp[i].percent_change_24h > 0) { $class = "green"; } else { $class = "red"; }
              var market_cap_usd = parseFloat(resp[i].market_cap_usd);
              var price_usd = parseFloat(resp[i].price_usd);
              var market_vol_usd = parseFloat(resp[i]["24h_volume_usd"]);
              var market_cap_usd = market_cap_usd.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
              var price_usd = price_usd.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
              var market_vol_usd = market_vol_usd.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
              $tr = $tr + '<tr><td class="currency-name"><div class="s-s-' + resp[i].id + ' currency-logo-sprite"></div> <span class="currency-symbol">' + resp[i].name + '</span></td><td>$' + market_cap_usd + '</td><td>$' + price_usd + '</td><td>$' + market_vol_usd + '</td><td class="' + $class + '">' + resp[i].percent_change_24h + '%</td>';
            });
            $("#currency_table").html($tr);
            $('#example1').DataTable({
              "order": [[1, "desc"]],
              "aLengthMenu": [[5, 10, 15, 20, 25, -1], [5, 10, 15, 20, 25, "All"]],
              "pageLength": 5
            });
          },
          error: function (xhr) {
          }
        });
        // Dashboard display cryptocurrency list in table ends     

        // Support form validation starts
        $("#submit-a-request").validate({
          rules: {
            subject: {
              required: true
            },
            description: {
              required: true
            }

          },
          messages: {
            subject: {
              required: "Please enter a subject"
            },
            description: {
              required: "PLease enter description"

            }
          }
        });
        // Support form validation ends  

      });
    </script>

    <script> 
var copyBtn = $("#clipboardBtn");
input = $("#copy-me");

function copyToClipboardFF(text) {
  window.prompt ("Copy to clipboard: Ctrl C, Enter", text);
}
function copyToClipboard() {
            //alert('copied to clipboard');
            var success   = true,
            range     = document.createRange(),
            selection;
            // For IE.
            if (window.clipboardData) {
              window.clipboardData.setData("Text", input.val());        
            } 
            else {
                // Create a temporary element off screen.
                var tmpElem = $('<div>');
                tmpElem.css({
                  position: "absolute",
                  left:     "-1000px",
                  top:      "-1000px",
                });
                // Add the input value to the temp element.
                tmpElem.text(input.val());
                $("body").append(tmpElem);
                // Select temp element.
                range.selectNodeContents(tmpElem.get(0));
                selection = window.getSelection ();
                selection.removeAllRanges ();
                selection.addRange (range);
                // Lets copy.
                try { 
                  success = document.execCommand ("copy", false, null);
                }
                catch (e) {
                  copyToClipboardFF(input.val());
                }
                if (success)
                {
                    tmpElem.remove();
                  }
                }
              }

              copyBtn.on('click', copyToClipboard);

        </script>

    <!-- Starts Script for Propagation & Sliding -->
    <script type="text/javascript">
      $(document).ready(function () {
        $("#bal-anchor").click(function () {
          $(".balance-box .left").slideToggle();
        });
        $("#rate-anchor").click(function () {
          $(".rates-box .right").slideToggle();
        });
      });
      $("#bal-anchor,#rate-anchor").click(function (e) {
        e.stopPropagation();
      });

      $(document).click(function () {
        $(".balance-box .left,.rates-box .right").slideUp();
      });

      $("#bal-anchor").click(function (e) {
        $(".rates-box .right").slideUp();
        $(".dropdown").removeClass("open");
      });

      $("#rate-anchor").click(function (e) {
        $(".balance-box .left").slideUp();
        $(".dropdown").removeClass("open");
      });

      $("#clickme").click(function (e) {
        $(".balance-box .left").slideUp();
        $(".rates-box .right").slideUp();
      });

    </script>
    <!-- Ends Script for Propagation & Sliding -->
    <!-- Starts Script for Header Rates -->
    {{#each user.currency}}
      <script>
        $.ajax({
          type: "GET",
          crossDomain: true,
          dataType: 'json',
          url: "https://coincap.io/page/{{this.currency_id}}",
          success: function (resp) {
            $(".cr_{{this.currency_id}}").append(' ' + resp.price_usd.toFixed(2));
          },
          error: function (xhr) {
          }
        });

      </script> 
    {{/each}}
    <!-- Ends Script for Header Rates -->                                   

</body>

</html>